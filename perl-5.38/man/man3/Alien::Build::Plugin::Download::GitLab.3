.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Alien::Build::Plugin::Download::GitLab 3"
.TH Alien::Build::Plugin::Download::GitLab 3 2022-09-23 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Alien::Build::Plugin::Download::GitLab \- Alien::Build plugin to download from GitLab
.SH VERSION
.IX Header "VERSION"
version 0.01
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& use alienfile;
\& 
\& plugin \*(AqDownload::GitLab\*(Aq => (
\&   gitlab_user    => \*(Aqplicease\*(Aq,
\&   gitlab_project => \*(Aqdontpanic\*(Aq,
\& );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This plugin is designed for downloading assets from a GitLab instance.
.SH PROPERTIES
.IX Header "PROPERTIES"
.SS gitlab_host
.IX Subsection "gitlab_host"
The host to fetch from <https://gitlab.com> by default.
.SS gitlab_user
.IX Subsection "gitlab_user"
The user to fetch from.
.SS gitlab_project
.IX Subsection "gitlab_project"
The project to fetch from.
.SS type
.IX Subsection "type"
The asset type to fetch.  This must be one of \f(CW\*(C`source\*(C'\fR or \f(CW\*(C`link\*(C'\fR.
.SS format
.IX Subsection "format"
The expected format of the asset.  This should be one that
Alien::Build::Plugin::Extract::Negotiate understands.  The
default is \f(CW\*(C`tar.gz\*(C'\fR.
.SS version_from
.IX Subsection "version_from"
Where to compute the version from.  This should be one of
\&\f(CW\*(C`tag_name\*(C'\fR or \f(CW\*(C`name\*(C'\fR.  The default is \f(CW\*(C`tag_name\*(C'\fR.
.SS convert_version
.IX Subsection "convert_version"
This is an optional code reference, which can be used to modify
the version.  For example, if tags have a \f(CW\*(C`v\*(C'\fR prefix you could
remove it like so:
.PP
.Vb 9
\& plugin \*(AqDownload::GitLab\*(Aq => (
\&   gitlab_user     => \*(Aqplicease\*(Aq,
\&   gitlab_project  => \*(Aqdontpanic\*(Aq,
\&   convert_version => sub {
\&     my $version = shift;
\&     $version =~ s/^v//;
\&     return $version;
\&   },
\& );
.Ve
.SS link_name
.IX Subsection "link_name"
For \f(CW\*(C`link\*(C'\fR types, this is a regular expression that filters the
asset filenames.  For example, if there are multiple archive
formats provided, you can get just the gzip'd tarball by setting
this to \f(CW\*(C`qr/\e.tar\e.gz$/\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP Alien 4
.IX Item "Alien"
.PD 0
.IP Alien::Build::Plugin::Download::GitHub 4
.IX Item "Alien::Build::Plugin::Download::GitHub"
.IP alienfile 4
.IX Item "alienfile"
.IP Alien::Build 4
.IX Item "Alien::Build"
.PD
.SH AUTHOR
.IX Header "AUTHOR"
Graham Ollis <plicease@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2022 by Graham Ollis.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
