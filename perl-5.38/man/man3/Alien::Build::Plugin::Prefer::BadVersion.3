.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Alien::Build::Plugin::Prefer::BadVersion 3"
.TH Alien::Build::Plugin::Prefer::BadVersion 3 2023-05-11 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Alien::Build::Plugin::Prefer::BadVersion \- Plugin to filter out known bad versions
.SH VERSION
.IX Header "VERSION"
version 2.80
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\& use alienfile;
\& plugin \*(AqPrefer::BadVersion\*(Aq => \*(Aq1.2.3\*(Aq;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This plugin allows you to easily filter out known bad versions of libraries in a share install.
It doesn't affect a system install at all.  You need a Prefer plugin that filters and sorts files
first.  You may specify the filter in one of three ways:
.IP "as a string" 4
.IX Item "as a string"
Filter out any files that match the given version.
.Sp
.Vb 2
\& use alienfile;
\& plugin \*(AqPrefer::BadVersion\*(Aq => \*(Aq1.2.3\*(Aq;
.Ve
.IP "as an array" 4
.IX Item "as an array"
Filter out all files that match any of the given versions.
.Sp
.Vb 2
\& use alienfile;
\& plugin \*(AqPrefer::BadVersion\*(Aq => [ \*(Aq1.2.3\*(Aq, \*(Aq1.2.4\*(Aq ];
.Ve
.IP "as a code reference" 4
.IX Item "as a code reference"
Filter out any files return a true value.
.Sp
.Vb 5
\& use alienfile;
\& plugin \*(AqPrefer::BadVersion\*(Aq => sub {
\&   my($file) = @_;
\&   $file\->{version} eq \*(Aq1.2.3\*(Aq; # same as the string version above
\& };
.Ve
.PP
This plugin can also be used to filter out known bad versions of a library on just one platform.
For example, if you know that version 1.2.3 if bad on windows, but okay on other platforms:
.PP
.Vb 2
\& use alienfile;
\& plugin \*(AqPrefer::BadVersion\*(Aq => \*(Aq1.2.3\*(Aq if $^O eq \*(AqMSWin32\*(Aq;
.Ve
.SH PROPERTIES
.IX Header "PROPERTIES"
.SS filter
.IX Subsection "filter"
Filter out entries that match the filter.
.SH CAVEATS
.IX Header "CAVEATS"
If you are using the string or array mode, then you need an existing Prefer plugin that sets the
version number for each file candidate, such as Alien::Build::Plugin::Prefer::SortVersions.
.PP
Unless you want to exclude the latest version from a share install, this plugin isn't really
that useful.  It has no effect on system installs, which may not be obvious at first.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP alienfile 4
.IX Item "alienfile"
.PD 0
.IP Alien::Build 4
.IX Item "Alien::Build"
.IP Alien::Build::Plugin::Prefer::SortVersions 4
.IX Item "Alien::Build::Plugin::Prefer::SortVersions"
.PD
.SH AUTHOR
.IX Header "AUTHOR"
Author: Graham Ollis <plicease@cpan.org>
.PP
Contributors:
.PP
Diab Jerius (DJERIUS)
.PP
Roy Storey (KIWIROY)
.PP
Ilya Pavlov
.PP
David Mertens (run4flat)
.PP
Mark Nunberg (mordy, mnunberg)
.PP
Christian Walde (Mithaldu)
.PP
Brian Wightman (MidLifeXis)
.PP
Zaki Mughal (zmughal)
.PP
mohawk (mohawk2, ETJ)
.PP
Vikas N Kumar (vikasnkumar)
.PP
Flavio Poletti (polettix)
.PP
Salvador Fandiño (salva)
.PP
Gianni Ceccarelli (dakkar)
.PP
Pavel Shaydo (zwon, trinitum)
.PP
Kang-min Liu (劉康民, gugod)
.PP
Nicholas Shipp (nshp)
.PP
Juan Julián Merelo Guervós (JJ)
.PP
Joel Berger (JBERGER)
.PP
Petr Písař (ppisar)
.PP
Lance Wicks (LANCEW)
.PP
Ahmad Fatoum (a3f, ATHREEF)
.PP
José Joaquín Atria (JJATRIA)
.PP
Duke Leto (LETO)
.PP
Shoichi Kaji (SKAJI)
.PP
Shawn Laffan (SLAFFAN)
.PP
Paul Evans (leonerd, PEVANS)
.PP
Håkon Hægland (hakonhagland, HAKONH)
.PP
nick nauwelaerts (INPHOBIA)
.PP
Florian Weimer
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2011\-2022 by Graham Ollis.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
