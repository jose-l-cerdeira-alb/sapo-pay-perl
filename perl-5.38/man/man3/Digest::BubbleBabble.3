.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Digest::BubbleBabble 3"
.TH Digest::BubbleBabble 3 2011-03-24 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Digest::BubbleBabble \- Create bubble\-babble fingerprints
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 3
\&    # Create a fingerprint of a simple string.
\&    use Digest::BubbleBabble qw( bubblebabble );
\&    my $fingerprint = bubblebabble( Digest => "Pineapple" );
\&
\&    # Create a fingerprint of a SHA\-1 hash.
\&    use Digest::SHA1 qw( sha1 );
\&    $fingerprint = bubblebabble( Digest => sha1("hello") );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fIDigest::BubbleBabble\fR takes a message digest (often generated by
either of the MD5 or SHA\-1 message digest algorithms) and creates
a fingerprint of that digest in "bubble babble" format.
Bubble babble is a method of representing a message digest
as a string of "real" words, to make the fingerprint easier
to remember. The "words" are not necessarily real words, but
they look more like words than a string of hex characters.
.PP
Bubble babble fingerprinting is used by the SSH2 suite
(and, consequently, by \fINet::SSH::Perl\fR, the Perl SSH
implementation) to display easy-to-remember key fingerprints.
The key (a DSA or RSA key) is converted into a textual form,
digested using \fIDigest::SHA1\fR, and run through \fIbubblebabble\fR
to create the key fingerprint.
.SH USAGE
.IX Header "USAGE"
\&\fIDigest::BubbleBabble\fR conditionally exports one function called
\&\fIbubblebabble\fR; to import the function you must choose to
import it, like this:
.PP
.Vb 1
\&    use Digest::BubbleBabble qw( bubblebabble );
.Ve
.ie n .SS "bubblebabble( Digest => $digest )"
.el .SS "bubblebabble( Digest => \f(CW$digest\fP )"
.IX Subsection "bubblebabble( Digest => $digest )"
Currently takes only one pair of arguments, the key of
which must be \fIDigest\fR, the value of which is the actual
message digest \fR\f(CI$digest\fR\fI\fR. You should generate this message
digest yourself using either \fIDigest::MD5\fR of \fIDigest::SHA1\fR.
.PP
Returns the bubble babble form of the digest.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The BubbleBabble specification is available at:
http://web.mit.edu/kenta/www/one/bubblebabble/spec/jrtrjwzi/draft\-huima\-01.txt
.SH LICENSE
.IX Header "LICENSE"
Digest::BubbleBabble is free software; you may redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHOR & COPYRIGHTS"
.IX Header "AUTHOR & COPYRIGHTS"
Benjamin Trott, cpan@stupidfool.org
.PP
Except where otherwise noted, Digest::BubbleBabble is Copyright
2001 Benjamin Trott. All rights reserved.
