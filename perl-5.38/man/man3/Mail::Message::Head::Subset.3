.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::Message::Head::Subset 3"
.TH Mail::Message::Head::Subset 3 2023-07-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Mail::Message::Head::Subset \- subset of header information of a message
.SH INHERITANCE
.IX Header "INHERITANCE"
.Vb 1
\& Mail::Message::Head::Subset realizes a Mail::Message::Head::Complete
\&
\& Mail::Message::Head::Subset
\&   is a Mail::Message::Head
\&   is a Mail::Reporter
.Ve
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 4
\& my $subset = Mail::Message::Head::Subset\->new(...)
\& $subset\->isa(\*(AqMail::Message::Head\*(Aq)  # true
\& $subset\->guessBodySize               # integer or undef
\& $subset\->isDelayed                   # true
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Some types of folders contain an index file which lists a few lines of
information per messages.  Especially when it is costly to read header lines,
the index speeds-up access considerably.  For instance, the subjects of
all messages are often wanted, but waiting for a thousand messages of the
folder to be read may imply a thousand network reads (IMAP) or file
openings (MH)
.PP
When you access header fields which are not in the header subset, the whole
header has to be parsed (which may consume considerable time, depending on
the type of folder).
.PP
Extends "DESCRIPTION" in Mail::Message::Head.
.SH OVERLOADED
.IX Header "OVERLOADED"
Extends "OVERLOADED" in Mail::Message::Head.
.IP "overload: \fB""""\fR" 4
.IX Item "overload: """""
Inherited, see "OVERLOADED" in Mail::Message::Head
.IP "overload: \fBbool\fR" 4
.IX Item "overload: bool"
Inherited, see "OVERLOADED" in Mail::Message::Head
.SH METHODS
.IX Header "METHODS"
Extends "METHODS" in Mail::Message::Head.
.SS Constructors
.IX Subsection "Constructors"
Extends "Constructors" in Mail::Message::Head.
.IP "Mail::Message::Head::Subset\->\fBbuild\fR( [PAIR|$field]\-LIST )" 4
.IX Item "Mail::Message::Head::Subset->build( [PAIR|$field]-LIST )"
Inherited, see "Constructors" in Mail::Message::Head
.IP Mail::Message::Head::Subset\->\fBnew\fR(%options) 4
.IX Item "Mail::Message::Head::Subset->new(%options)"
Inherited, see "Constructors" in Mail::Message::Head
.SS "The header"
.IX Subsection "The header"
Extends "The header" in Mail::Message::Head.
.ie n .IP $obj\->\fBisDelayed\fR() 4
.el .IP \f(CW$obj\fR\->\fBisDelayed\fR() 4
.IX Item "$obj->isDelayed()"
Inherited, see "The header" in Mail::Message::Head
.ie n .IP $obj\->\fBisEmpty\fR() 4
.el .IP \f(CW$obj\fR\->\fBisEmpty\fR() 4
.IX Item "$obj->isEmpty()"
Inherited, see "The header" in Mail::Message::Head
.ie n .IP $obj\->\fBisModified\fR() 4
.el .IP \f(CW$obj\fR\->\fBisModified\fR() 4
.IX Item "$obj->isModified()"
Inherited, see "The header" in Mail::Message::Head
.ie n .IP $obj\->\fBknownNames\fR() 4
.el .IP \f(CW$obj\fR\->\fBknownNames\fR() 4
.IX Item "$obj->knownNames()"
Inherited, see "The header" in Mail::Message::Head
.ie n .IP "$obj\->\fBmessage\fR( [$message] )" 4
.el .IP "\f(CW$obj\fR\->\fBmessage\fR( [$message] )" 4
.IX Item "$obj->message( [$message] )"
Inherited, see "The header" in Mail::Message::Head
.ie n .IP "$obj\->\fBmodified\fR( [BOOLEAN] )" 4
.el .IP "\f(CW$obj\fR\->\fBmodified\fR( [BOOLEAN] )" 4
.IX Item "$obj->modified( [BOOLEAN] )"
Inherited, see "The header" in Mail::Message::Head
.ie n .IP $obj\->\fBorderedFields\fR() 4
.el .IP \f(CW$obj\fR\->\fBorderedFields\fR() 4
.IX Item "$obj->orderedFields()"
Inherited, see "The header" in Mail::Message::Head
.SS "Access to the header"
.IX Subsection "Access to the header"
Extends "Access to the header" in Mail::Message::Head.
.ie n .IP $obj\->\fBcount\fR($name) 4
.el .IP \f(CW$obj\fR\->\fBcount\fR($name) 4
.IX Item "$obj->count($name)"
Count the number of fields with this \f(CW$name\fR.  If the \f(CW$name\fR cannot be found,
the full header get loaded.  In case we find any \f(CW$name\fR field, it is
decided we know all of them, and loading is not needed.
.ie n .IP "$obj\->\fBget\fR( $name, [$index] )" 4
.el .IP "\f(CW$obj\fR\->\fBget\fR( \f(CW$name\fR, [$index] )" 4
.IX Item "$obj->get( $name, [$index] )"
Get the data which is related to the field with the \f(CW$name\fR.  The case of the
characters in \f(CW$name\fR does not matter.  When a \f(CW$name\fR is used which is not known
yet, realization will take place.
.ie n .IP "$obj\->\fBstudy\fR( $name, [$index] )" 4
.el .IP "\f(CW$obj\fR\->\fBstudy\fR( \f(CW$name\fR, [$index] )" 4
.IX Item "$obj->study( $name, [$index] )"
Inherited, see "Access to the header" in Mail::Message::Head
.SS "About the body"
.IX Subsection "About the body"
Extends "About the body" in Mail::Message::Head.
.ie n .IP $obj\->\fBguessBodySize\fR() 4
.el .IP \f(CW$obj\fR\->\fBguessBodySize\fR() 4
.IX Item "$obj->guessBodySize()"
The body size is defined in the \f(CW\*(C`Content\-Length\*(C'\fR field.  However, this
field may not be known.  In that case, a guess is made based on the known
\&\f(CW\*(C`Lines\*(C'\fR field.  When also that field is not known yet, \f(CW\*(C`undef\*(C'\fR is returned.
.ie n .IP $obj\->\fBisMultipart\fR() 4
.el .IP \f(CW$obj\fR\->\fBisMultipart\fR() 4
.IX Item "$obj->isMultipart()"
Inherited, see "About the body" in Mail::Message::Head
.SS Internals
.IX Subsection "Internals"
Extends "Internals" in Mail::Message::Head.
.ie n .IP $obj\->\fBaddNoRealize\fR($field) 4
.el .IP \f(CW$obj\fR\->\fBaddNoRealize\fR($field) 4
.IX Item "$obj->addNoRealize($field)"
Inherited, see "Internals" in Mail::Message::Head
.ie n .IP $obj\->\fBaddOrderedFields\fR($fields) 4
.el .IP \f(CW$obj\fR\->\fBaddOrderedFields\fR($fields) 4
.IX Item "$obj->addOrderedFields($fields)"
Inherited, see "Internals" in Mail::Message::Head
.ie n .IP $obj\->\fBfileLocation\fR() 4
.el .IP \f(CW$obj\fR\->\fBfileLocation\fR() 4
.IX Item "$obj->fileLocation()"
Inherited, see "Internals" in Mail::Message::Head
.ie n .IP $obj\->\fBload\fR() 4
.el .IP \f(CW$obj\fR\->\fBload\fR() 4
.IX Item "$obj->load()"
Inherited, see "Internals" in Mail::Message::Head
.ie n .IP $obj\->\fBmoveLocation\fR($distance) 4
.el .IP \f(CW$obj\fR\->\fBmoveLocation\fR($distance) 4
.IX Item "$obj->moveLocation($distance)"
Inherited, see "Internals" in Mail::Message::Head
.ie n .IP $obj\->\fBread\fR($parser) 4
.el .IP \f(CW$obj\fR\->\fBread\fR($parser) 4
.IX Item "$obj->read($parser)"
Inherited, see "Internals" in Mail::Message::Head
.ie n .IP $obj\->\fBsetNoRealize\fR($field) 4
.el .IP \f(CW$obj\fR\->\fBsetNoRealize\fR($field) 4
.IX Item "$obj->setNoRealize($field)"
Inherited, see "Internals" in Mail::Message::Head
.SS "Error handling"
.IX Subsection "Error handling"
Extends "Error handling" in Mail::Message::Head.
.ie n .IP $obj\->\fBAUTOLOAD\fR() 4
.el .IP \f(CW$obj\fR\->\fBAUTOLOAD\fR() 4
.IX Item "$obj->AUTOLOAD()"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBaddReport\fR($object) 4
.el .IP \f(CW$obj\fR\->\fBaddReport\fR($object) 4
.IX Item "$obj->addReport($object)"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "\f(CW$obj\fR\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "$obj->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD 0
.ie n .IP "Mail::Message::Head::Subset\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "Mail::Message::Head::Subset\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "Mail::Message::Head::Subset->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBerrors\fR() 4
.el .IP \f(CW$obj\fR\->\fBerrors\fR() 4
.IX Item "$obj->errors()"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBlog\fR( [$level, [$strings]] )" 4
.el .IP "\f(CW$obj\fR\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "$obj->log( [$level, [$strings]] )"
.PD 0
.IP "Mail::Message::Head::Subset\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "Mail::Message::Head::Subset->log( [$level, [$strings]] )"
.PD
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBlogPriority\fR($level) 4
.el .IP \f(CW$obj\fR\->\fBlogPriority\fR($level) 4
.IX Item "$obj->logPriority($level)"
.PD 0
.IP Mail::Message::Head::Subset\->\fBlogPriority\fR($level) 4
.IX Item "Mail::Message::Head::Subset->logPriority($level)"
.PD
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBlogSettings\fR() 4
.el .IP \f(CW$obj\fR\->\fBlogSettings\fR() 4
.IX Item "$obj->logSettings()"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBnotImplemented\fR() 4
.el .IP \f(CW$obj\fR\->\fBnotImplemented\fR() 4
.IX Item "$obj->notImplemented()"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBreport\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreport\fR( [$level] )" 4
.IX Item "$obj->report( [$level] )"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBreportAll\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreportAll\fR( [$level] )" 4
.IX Item "$obj->reportAll( [$level] )"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBtrace\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBtrace\fR( [$level] )" 4
.IX Item "$obj->trace( [$level] )"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBwarnings\fR() 4
.el .IP \f(CW$obj\fR\->\fBwarnings\fR() 4
.IX Item "$obj->warnings()"
Inherited, see "Error handling" in Mail::Reporter
.SS Cleanup
.IX Subsection "Cleanup"
Extends "Cleanup" in Mail::Message::Head.
.ie n .IP $obj\->\fBDESTROY\fR() 4
.el .IP \f(CW$obj\fR\->\fBDESTROY\fR() 4
.IX Item "$obj->DESTROY()"
Inherited, see "Cleanup" in Mail::Reporter
.SH DETAILS
.IX Header "DETAILS"
Extends "DETAILS" in Mail::Message::Head.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
.ie n .IP "Error: Package $package does not implement $method." 4
.el .IP "Error: Package \f(CW$package\fR does not implement \f(CW$method\fR." 4
.IX Item "Error: Package $package does not implement $method."
Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Mail-Box distribution version 3.010,
built on July 18, 2023. Website: \fIhttp://perl.overmeer.net/CPAN/\fR
.SH LICENSE
.IX Header "LICENSE"
Copyrights 2001\-2023 by [Mark Overmeer]. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://dev.perl.org/licenses/\fR
