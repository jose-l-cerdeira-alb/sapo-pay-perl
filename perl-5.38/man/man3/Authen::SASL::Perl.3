.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Authen::SASL::Perl 3"
.TH Authen::SASL::Perl 3 2023-08-10 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Authen::SASL::Perl \-\- Perl implementation of the SASL Authentication framework
.SH VERSION
.IX Header "VERSION"
version 2.1700
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& use Authen::SASL qw(Perl);
\&
\& $sasl = Authen::SASL\->new(
\&   mechanism => \*(AqCRAM\-MD5 PLAIN ANONYMOUS\*(Aq,
\&   callback => {
\&     user => $user,
\&     pass => \e&fetch_password
\&   }
\& );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBAuthen::SASL::Perl\fR is the pure Perl implementation of SASL mechanisms
in the \fBAuthen::SASL\fR framework.
.PP
At the time of this writing it provides the client part implementation
for the following SASL mechanisms:
.IP ANONYMOUS 4
.IX Item "ANONYMOUS"
The Anonymous SASL Mechanism as defined in RFC 2245 resp. 
in IETF Draft draft\-ietf\-sasl\-anon\-03.txt from February 2004
provides a method to anonymously access internet services.
.Sp
Since it does no authentication it does not need to send 
any confidential information such as passwords in plain text
over the network.
.IP CRAM\-MD5 4
.IX Item "CRAM-MD5"
The CRAM\-MD5 SASL Mechanism as defined in RFC2195 resp.
in IETF Draft draft\-ietf\-sasl\-crammd5\-XX.txt
offers a simple challenge-response authentication mechanism.
.Sp
Since it is a challenge-response authentication mechanism
no passwords are transferred in clear-text over the wire.
.Sp
Due to the simplicity of the protocol CRAM\-MD5 is susceptible
to replay and dictionary attacks, so DIGEST\-MD5 should be used
in preference.
.IP DIGEST\-MD5 4
.IX Item "DIGEST-MD5"
The DIGEST\-MD5 SASL Mechanism as defined in RFC 2831 resp.
in IETF Draft draft\-ietf\-sasl\-rfc2831bis\-XX.txt
offers the HTTP Digest Access Authentication as SASL mechanism.
.Sp
Like CRAM\-MD5 it is a challenge-response authentication
method that does not send plain text passwords over the network.
.Sp
Compared to CRAM\-MD5, DIGEST\-MD5 prevents chosen plaintext
attacks, and permits the use of third party authentication servers,
so that it is recommended to use DIGEST\-MD5 instead of CRAM\-MD5
when possible.
.IP EXTERNAL 4
.IX Item "EXTERNAL"
The EXTERNAL SASL mechanism as defined in RFC 2222
allows the use of external authentication systems as SASL mechanisms.
.IP GSSAPI 4
.IX Item "GSSAPI"
The GSSAPI SASL mechanism as defined in RFC 2222 resp. IETF Draft
draft\-ietf\-sasl\-gssapi\-XX.txt allows using the Generic Security Service
Application Program Interface [GSSAPI] KERBEROS V5 as a SASL mechanism.
.Sp
Although GSSAPI is a general mechanism for authentication it is almost
exclusively used for Kerberos 5.
.IP LOGIN 4
.IX Item "LOGIN"
The LOGIN SASL Mechanism as defined in IETF Draft
draft\-murchison\-sasl\-login\-XX.txt allows  the
combination of username and clear-text password to be used
in a SASL mechanism.
.Sp
It does not provide a security layer and sends the credentials
in clear over the wire.
Thus this mechanism should not be used without adequate security
protection.
.IP PLAIN 4
.IX Item "PLAIN"
The Plain SASL Mechanism as defined in RFC 2595 resp. IETF Draft
draft\-ietf\-sasl\-plain\-XX.txt is another SASL mechanism that allows
username and clear-text password combinations in SASL environments.
.Sp
Like LOGIN it sends the credentials in clear over the network
and should not be used without sufficient security protection.
.PP
As for server support, only \fIPLAIN\fR, \fILOGIN\fR and \fIDIGEST\-MD5\fR are supported
at the time of this writing.
.PP
\&\f(CW\*(C`server_new\*(C'\fR OPTIONS is a hashref that is only relevant for \fIDIGEST\-MD5\fR for
now and it supports the following options:
.IP "\- no_integrity" 4
.IX Item "- no_integrity"
.PD 0
.IP "\- no_confidentiality" 4
.IX Item "- no_confidentiality"
.PD
.PP
which configures how the security layers are negotiated with the client (or
rather imposed to the client).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Authen::SASL,
Authen::SASL::Perl::ANONYMOUS,
Authen::SASL::Perl::CRAM_MD5,
Authen::SASL::Perl::DIGEST_MD5,
Authen::SASL::Perl::EXTERNAL,
Authen::SASL::Perl::GSSAPI,
Authen::SASL::Perl::LOGIN,
Authen::SASL::Perl::PLAIN
.SH AUTHOR
.IX Header "AUTHOR"
Peter Marschall <peter@adpm.de>
.PP
Please report any bugs, or post any suggestions, to the perl-ldap mailing list
<perl\-ldap@perl.org>
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (c) 2004\-2006 Peter Marschall.
All rights reserved. This document is distributed, and may be redistributed,
under the same terms as Perl itself.
