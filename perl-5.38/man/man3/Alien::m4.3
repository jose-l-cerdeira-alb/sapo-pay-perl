.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Alien::m4 3"
.TH Alien::m4 3 2021-06-22 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Alien::m4 \- Find or build GNU m4
.SH VERSION
.IX Header "VERSION"
version 0.21
.SH SYNOPSIS
.IX Header "SYNOPSIS"
From a Perl script
.PP
.Vb 3
\& use Alien::m4;
\& use Env qw( @PATH );
\& unshift @PATH, Alien::m4\->bin_dir;  # m4 is now in your path
.Ve
.PP
From Alien::Base Build.PL
.PP
.Vb 9
\& use Alien:Base::ModuleBuild;
\& my $builder = Module::Build\->new(
\&   ...
\&   alien_bin_requires => {
\&     \*(AqAlien::m4\*(Aq => \*(Aq0.07\*(Aq,
\&   },
\&   ...
\& );
\& $builder\->create_build_script;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This package can be used by other CPAN modules that require GNU m4.
.SH METHODS
.IX Header "METHODS"
.SS exe
.IX Subsection "exe"
.Vb 1
\& my $m4 = Alien::m4\->exe;
.Ve
.PP
Returns the "name" of m4.  Normally this is \f(CW\*(C`m4\*(C'\fR, but on some platforms
it may be gm4 or gnum4, or whatever is specified by \f(CW$ENV{M4}\fR.
.SH HELPERS
.IX Header "HELPERS"
.SS m4
.IX Subsection "m4"
.Vb 1
\& %{m4}
.Ve
.PP
Returns the name of the m4 command.  Usually just \f(CW\*(C`m4\*(C'\fR.
.SH CAVEATS
.IX Header "CAVEATS"
Why GNU m4?  Many Unixen come with BSD or other variants of m4 which are
perfectly good.  Unfortunately, the main use case for this module is
Alien::Autotools and friends.  Autoconf requires the GNU m4, probably
for political reasons, possibly for technical reasons.  If you are using
one of these Unixen, don't despair, you can usually install the GNU
version of m4 either by building from source or by installing a binary
package, with either the name \f(CW\*(C`gm4\*(C'\fR or \f(CW\*(C`gnum4\*(C'\fR, and this module will
find it, and Alien::Autotools will be able to use it.
.SH AUTHOR
.IX Header "AUTHOR"
Graham Ollis <plicease@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2017 by Graham Ollis.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
