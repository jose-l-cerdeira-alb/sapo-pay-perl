.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dancer::Logger::Abstract 3"
.TH Dancer::Logger::Abstract 3 2023-02-08 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Dancer::Logger::Abstract \- Abstract logging engine for Dancer
.SH VERSION
.IX Header "VERSION"
version 1.3521
.SH SYNOPSIS
.IX Header "SYNOPSIS"
In your configuration file:
.PP
.Vb 3
\&    # default
\&    logger_format: simple
\&    # [1234] debug @0.12> [hit #123]message from your log in File.pm line 12
\&
\&    # custom
\&    logger_format: %m %{%H:%M}t [%{accept_type}h]
\&    # message from your log [11:59] [text/html]
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is an abstract logging engine that provides loggers with basic
functionality and some sanity checking.
.SH CONFIGURATION
.IX Header "CONFIGURATION"
.SS logger_format
.IX Subsection "logger_format"
This is a format string (or a preset name) to specify the log format.
.PP
The possible values are:
.ie n .IP %h 4
.el .IP \f(CW%h\fR 4
.IX Item "%h"
host emitting the request
.ie n .IP %t 4
.el .IP \f(CW%t\fR 4
.IX Item "%t"
date (local timezone, formatted like \f(CW%d\fR/%b/%Y \f(CW%H:\fR%M:%S)
.ie n .IP %T 4
.el .IP \f(CW%T\fR 4
.IX Item "%T"
date (local timezone, formatted like \f(CW%Y\fR\-%m\-%d \f(CW%H:\fR%M:%S)
.ie n .IP %u 4
.el .IP \f(CW%u\fR 4
.IX Item "%u"
date (UTC timezone, formatted like \f(CW%d\fR/%b/%Y \f(CW%H:\fR%M:%S)
.ie n .IP %U 4
.el .IP \f(CW%U\fR 4
.IX Item "%U"
date (UTC timezone, formatted like \f(CW%Y\fR\-%m\-%d \f(CW%H:\fR%M:%S)
.ie n .IP %P 4
.el .IP \f(CW%P\fR 4
.IX Item "%P"
PID
.ie n .IP %L 4
.el .IP \f(CW%L\fR 4
.IX Item "%L"
log level
.ie n .IP %D 4
.el .IP \f(CW%D\fR 4
.IX Item "%D"
timer
.ie n .IP %m 4
.el .IP \f(CW%m\fR 4
.IX Item "%m"
message
.ie n .IP %f 4
.el .IP \f(CW%f\fR 4
.IX Item "%f"
file name that emit the message
.ie n .IP %l 4
.el .IP \f(CW%l\fR 4
.IX Item "%l"
line from the file
.ie n .IP %i 4
.el .IP \f(CW%i\fR 4
.IX Item "%i"
request ID
.IP %{$fmt}t 4
.IX Item "%{$fmt}t"
timer formatted with a valid time format
.IP %{header}h 4
.IX Item "%{header}h"
header value
.PP
There is currently a single preset log format:
.IP simple 4
.IX Item "simple"
will format the message like: [%P] \f(CW%L\fR @%D> \f(CW%i\fR%m in \f(CW%f\fR l. \f(CW%l\fR
.SH METHODS
.IX Header "METHODS"
.SS format_message
.IX Subsection "format_message"
Provides a common message formatting.
.SS core
.IX Subsection "core"
Logs messages as core.
.SS debug
.IX Subsection "debug"
Logs messages as debug.
.SS warning
.IX Subsection "warning"
Logs messages as warning.
.SS error
.IX Subsection "error"
Logs messages as error.
.SS info
.IX Subsection "info"
Logs messages as info.
.SS _log
.IX Subsection "_log"
A method to override. If your logger does not provide this, it will cause the
application to die.
.SS _should
.IX Subsection "_should"
Checks a certain level number against a certain level type (core, debug, info
warning, error).
.SH AUTHOR
.IX Header "AUTHOR"
Dancer Core Developers
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2010 by Alexis Sukrieh.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
