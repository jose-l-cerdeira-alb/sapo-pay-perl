.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Sys::Proctitle 3"
.TH Sys::Proctitle 3 2010-03-11 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Sys::Proctitle \- modify proctitle on Linux
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 4
\&  use Sys::Proctitle qw/:all/;
\&  setproctitle( "my new title" );
\&  setproctitle( qw/my new title/ );
\&  $s=getproctitle;
\&
\& or
\&
\&  {
\&    # set proctitle while in block
\&    my $proctitle=Sys::Proctitle\->new( \*(Aqmy new title\*(Aq );
\&    ...
\&  }
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Sys::Proctitle\*(C'\fR provides an interface for setting the process title shown
by \f(CW\*(C`ps\*(C'\fR, \f(CW\*(C`top\*(C'\fR or similar tools on Linux. Why do we need this? One could
simply change \f(CW$0\fR to achieve the same result.  Well, first setting \f(CW$0\fR
did not work with 5.8.0. Further, setting \f(CW$0\fR won't work with mod_perl.
.SS "Procedural Interface"
.IX Subsection "Procedural Interface"
.IP "\fIsetproctitle( arg1, arg2, ... argN )\fR" 4
.IX Item "setproctitle( arg1, arg2, ... argN )"
all arguments are joined with \f(CW\*(C`\e0\*(C'\fR. The resulting string is set as process
title.
.IP \fR\f(BIgetproctitle()\fR\fI\fR 4
.IX Item "getproctitle()"
returns the current process title. On Linux the space useable as process
title consists of the original space for argv the process was executed
with plus the space of the original environment. This function returns the
current content of this buffer.
.Sp
The length of the returned string is the maximum process title length.
.SS "Object Interface"
.IX Subsection "Object Interface"
.IP "\fInew( arg1, arg2, ... argN )\fR" 4
.IX Item "new( arg1, arg2, ... argN )"
the current process title is saved. Then the arguments are passed to
\&\f(CW\*(C`setproctitle\*(C'\fR.
.IP \fR\f(BIDESTROY()\fR\fI\fR 4
.IX Item "DESTROY()"
restores the saved process title.
.SH EXPORT
.IX Header "EXPORT"
None by default.
.PP
On demand \f(CW\*(C`setproctitle\*(C'\fR and \f(CW\*(C`getproctitle\*(C'\fR are exported.
.PP
The \f(CW\*(C`:all\*(C'\fR Exporter tag exports \f(CW\*(C`setproctitle\*(C'\fR and \f(CW\*(C`getproctitle\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Apache::ShowStatus
.SH AUTHOR
.IX Header "AUTHOR"
Torsten Foertsch, <torsten.foertsch@gmx.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2004 by Torsten Foertsch
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
