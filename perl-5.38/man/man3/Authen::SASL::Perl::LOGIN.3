.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Authen::SASL::Perl::LOGIN 3"
.TH Authen::SASL::Perl::LOGIN 3 2023-08-10 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Authen::SASL::Perl::LOGIN \- Login Authentication class
.SH VERSION
.IX Header "VERSION"
version 2.1700
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use Authen::SASL qw(Perl);
\&
\&  $sasl = Authen::SASL\->new(
\&    mechanism => \*(AqLOGIN\*(Aq,
\&    callback  => {
\&      user => $user,
\&      pass => $pass
\&    },
\&  );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This method implements the client and server part of the LOGIN SASL algorithm,
as described in IETF Draft draft\-murchison\-sasl\-login\-XX.txt.
.SS CALLBACK
.IX Subsection "CALLBACK"
The callbacks used are:
.PP
\fIClient\fR
.IX Subsection "Client"
.IP user 4
.IX Item "user"
The username to be used for authentication
.IP pass 4
.IX Item "pass"
The user's password to be used for authentication
.PP
\fIServer\fR
.IX Subsection "Server"
.IP getsecret(username) 4
.IX Item "getsecret(username)"
returns the password associated with \f(CW\*(C`username\*(C'\fR
.IP "checkpass(username, password)" 4
.IX Item "checkpass(username, password)"
returns true and false depending on the validity of the credentials passed
in arguments.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Authen::SASL,
Authen::SASL::Perl
.SH AUTHORS
.IX Header "AUTHORS"
Software written by Graham Barr <gbarr@pobox.com>,
documentation written by Peter Marschall <peter@adpm.de>.
Server support by Yann Kerherve <yannk@cpan.org>
.PP
Please report any bugs, or post any suggestions, to the perl-ldap mailing list
<perl\-ldap@perl.org>
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2004 Graham Barr.
All rights reserved. This program is free software; you can redistribute 
it and/or modify it under the same terms as Perl itself.
.PP
Documentation Copyright (c) 2004 Peter Marschall.
All rights reserved.  This documentation is distributed,
and may be redistributed, under the same terms as Perl itself.
.PP
Server support Copyright (c) 2009 Yann Kerherve.
All rights reserved. This program is free software; you can redistribute 
it and/or modify it under the same terms as Perl itself.
