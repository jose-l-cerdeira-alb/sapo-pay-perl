.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XML::LibXML::SAX 3"
.TH XML::LibXML::SAX 3 2023-07-15 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
XML::LibXML::SAX \- XML::LibXML direct SAX parser
.SH DESCRIPTION
.IX Header "DESCRIPTION"
XML::LibXML provides an interface to libxml2 direct SAX interface. Through this
interface it is possible to generate SAX events directly while parsing a
document. While using the SAX parser XML::LibXML will not create a DOM Document
tree.
.PP
Such an interface is useful if very large XML documents have to be processed
and no DOM functions are required. By using this interface it is possible to
read data stored within an XML document directly into the application data
structures without loading the document into memory.
.PP
The SAX interface of XML::LibXML is based on the famous XML::SAX interface. It
uses the generic interface as provided by XML::SAX::Base.
.PP
Additionally to the generic functions, which are only able to process entire
documents, XML::LibXML::SAX provides \fR\f(BIparse_chunk()\fR\fI\fR. This method generates SAX events from well balanced data such as is often
provided by databases.
.SH FEATURES
.IX Header "FEATURES"
\&\fINOTE:\fR This feature is experimental.
.PP
You can enable character data joining which may yield a significant speed boost
in your XML processing in lower markup ratio situations by enabling the
http://xmlns.perl.org/sax/join\-character\-data feature of this parser. This is
done via the set_feature method like this:
.PP
.Vb 1
\&  $p\->set_feature(\*(Aqhttp://xmlns.perl.org/sax/join\-character\-data\*(Aq, 1);
.Ve
.PP
You can also specify a 0 to disable. The default is to have this feature
disabled.
.SH AUTHORS
.IX Header "AUTHORS"
Matt Sergeant,
Christian Glahn,
Petr Pajas
.SH VERSION
.IX Header "VERSION"
2.0209
.SH COPYRIGHT
.IX Header "COPYRIGHT"
2001\-2007, AxKit.com Ltd.
.PP
2002\-2006, Christian Glahn.
.PP
2006\-2009, Petr Pajas.
.SH LICENSE
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
