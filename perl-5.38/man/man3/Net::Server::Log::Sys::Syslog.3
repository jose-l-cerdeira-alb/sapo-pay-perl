.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Server::Log::Sys::Syslog 3"
.TH Net::Server::Log::Sys::Syslog 3 2022-12-02 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Net::Server::Log::Sys::Syslog \- log via Syslog
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use base qw(Net::Server::PreFork);
\&
\&    _\|_PACKAGE_\|_\->run(
\&        log_file => \*(AqSys::Syslog\*(Aq,
\&        syslog_ident => \*(Aqmyapp\*(Aq,
\&    );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module provides Sys::Syslog logging to the Net::Server system.
.SH CONFIGURATION
.IX Header "CONFIGURATION"
.IP log_file 4
.IX Item "log_file"
To begin using Sys::Syslog logging, simply set the Net::Server
log_file configuration parameter to "Sys::Syslog".
.Sp
If the magic name "Sys::Syslog" is used, all logging will take place
via the Sys::Syslog module.  If syslog is used the parameters
\&\f(CW\*(C`syslog_logsock\*(C'\fR, \f(CW\*(C`syslog_ident\*(C'\fR, and \f(CW\*(C`syslog_logopt\*(C'\fR,and
\&\f(CW\*(C`syslog_facility\*(C'\fR may also be defined.
.IP syslog_logsock 4
.IX Item "syslog_logsock"
Only available if \f(CW\*(C`log_file\*(C'\fR is equal to "Sys::Syslog".  May be
either unix, inet, native, console, stream, udp, or tcp, or an
arrayref of the types to try.  Default is "unix" if the version of
Sys::Syslog < 0.15 \- otherwise the default is to not call setlogsock.
.Sp
See Sys::Syslog.
.IP syslog_ident 4
.IX Item "syslog_ident"
Only available if \f(CW\*(C`log_file\*(C'\fR is equal to "Sys::Syslog".  Id to
prepend on syslog entries.  Default is "net_server".  See
Sys::Syslog.
.IP syslog_logopt 4
.IX Item "syslog_logopt"
Only available if \f(CW\*(C`log_file\*(C'\fR is equal to "Sys::Syslog".  May be
either zero or more of "pid","cons","ndelay","nowait".  Default is
"pid".  See Sys::Syslog.
.IP syslog_facility 4
.IX Item "syslog_facility"
Only available if \f(CW\*(C`log_file\*(C'\fR is equal to "Sys::Syslog".  See
Sys::Syslog and syslog.  Default is "daemon".
.SH "DEFAULT ARGUMENTS FOR Net::Server"
.IX Header "DEFAULT ARGUMENTS FOR Net::Server"
The following arguments are available in the default \f(CW\*(C`Net::Server\*(C'\fR or
\&\f(CW\*(C`Net::Server::Single\*(C'\fR modules.  (Other personalities may use
additional parameters and may optionally not use parameters from the
base class.)
.PP
.Vb 1
\&    Key               Value                    Default
\&
\&    ## syslog parameters (if log_file eq Sys::Syslog)
\&    syslog_logsock    (native|unix|inet|udp
\&                       |tcp|stream|console)    unix (on Sys::Syslog < 0.15)
\&    syslog_ident      "identity"               "net_server"
\&    syslog_logopt     (cons|ndelay|nowait|pid) pid
\&    syslog_facility   \ew+                      daemon
.Ve
.SH METHODS
.IX Header "METHODS"
.ie n .IP """initialize""" 4
.el .IP \f(CWinitialize\fR 4
.IX Item "initialize"
This method is called during the initilize_logging method of
Net::Server.  It returns a single code ref that will be stored under
the log_function property of the Net::Server object.  That code ref
takes log_level and message as arguments and calls the initialized
log4perl system.
.ie n .IP """handle_log_error""" 4
.el .IP \f(CWhandle_log_error\fR 4
.IX Item "handle_log_error"
This method is called if the log_function fails for some reason.  It
is passed the Net::Server object, the error that occurred while
logging and an arrayref containing the log level and the message.  In
turn, this calls the legacy Net::Server::handle_syslog_error method.
.SH LICENCE
.IX Header "LICENCE"
Distributed under the same terms as Net::Server
