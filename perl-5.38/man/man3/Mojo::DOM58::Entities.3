.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojo::DOM58::Entities 3"
.TH Mojo::DOM58::Entities 3 2021-06-16 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Mojo::DOM58::Entities \- Escape or unescape HTML entities in strings
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use Mojo::DOM58::Entities qw(html_escape html_unescape);
\&  
\&  my $str = \*(Aqfoo &amp; bar\*(Aq;
\&  $str = html_unescape $str; # "foo & bar"
\&  $str = html_escape $str; # "foo &amp; bar"
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Mojo::DOM58::Entities contains functions for escaping and unescaping HTML
entities for Mojo::DOM58, based on functions from Mojo::Util. All
functions are exported on demand.
.SH FUNCTIONS
.IX Header "FUNCTIONS"
.SS html_attr_unescape
.IX Subsection "html_attr_unescape"
.Vb 1
\&  my $str = html_attr_unescape $escaped;
.Ve
.PP
Same as "html_unescape", but handles special rules from the
HTML Living Standard <https://html.spec.whatwg.org> for HTML attributes.
.PP
.Vb 2
\&  # "foo=bar&ltest=baz"
\&  html_attr_unescape \*(Aqfoo=bar&ltest=baz\*(Aq;
\&
\&  # "foo=bar<est=baz"
\&  html_attr_unescape \*(Aqfoo=bar&lt;est=baz\*(Aq;
.Ve
.SS html_escape
.IX Subsection "html_escape"
.Vb 1
\& my $escaped = html_escape $str;
.Ve
.PP
Escape unsafe characters \f(CW\*(C`&\*(C'\fR, \f(CW\*(C`<\*(C'\fR, \f(CW\*(C`>\*(C'\fR, \f(CW\*(C`"\*(C'\fR, and \f(CW\*(C`\*(Aq\*(C'\fR in string.
.PP
.Vb 1
\& html_escape \*(Aq<div>\*(Aq; # "&lt;div&gt;"
.Ve
.SS html_unescape
.IX Subsection "html_unescape"
.Vb 1
\& my $str = html_unescape $escaped;
.Ve
.PP
Unescape all HTML entities in string, according to the
HTML Living Standard <https://html.spec.whatwg.org/#named-character-references-table>.
.PP
.Vb 1
\& html_unescape \*(Aq&lt;div&gt\*(Aq; # "<div>"
.Ve
.SH BUGS
.IX Header "BUGS"
Report issues related to the format of this distribution or Perl 5.8 support to
the public bugtracker. Any other issues should be reported directly to the
upstream Mojolicious issue tracker.
.SH AUTHOR
.IX Header "AUTHOR"
Dan Book <dbook@cpan.org>
.PP
Code and tests adapted from Mojo::Util, a set of utilities by the
Mojolicious team.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2008\-2016 Sebastian Riedel and others.
.PP
Copyright (c) 2016 Dan Book for adaptation to standalone format.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTML::Entities
