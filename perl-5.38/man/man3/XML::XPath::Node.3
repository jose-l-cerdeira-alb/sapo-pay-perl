.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XML::XPath::Node 3"
.TH XML::XPath::Node 3 2022-08-09 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
XML::XPath::Node \- internal representation of a node
.SH API
.IX Header "API"
The Node API aims to emulate DOM to some extent, however the API
isn't quite compatible with DOM. This is to ease transition from
XML::DOM programming to XML::XPath. Compatibility with DOM may
arise once XML::DOM gets namespace support.
.SS new
.IX Subsection "new"
Creates a new node. See the sub-classes for parameters to pass to \fBnew()\fR.
.SS getNodeType
.IX Subsection "getNodeType"
Returns one of ELEMENT_NODE, TEXT_NODE, COMMENT_NODE, ATTRIBUTE_NODE,
PROCESSING_INSTRUCTION_NODE or NAMESPACE_NODE. UNKNOWN_NODE is returned
if the sub-class doesn't implement getNodeType \- but that means
something is broken! The constants are exported by default from
XML::XPath::Node. The constants have the same numeric value as the
XML::DOM versions.
.SS getParentNode
.IX Subsection "getParentNode"
Returns the parent of this node, or undef if this is the root node. Note
that the root node is the root node in terms of XPath \- not the root
element node.
.ie n .SS "to_sax ( $handler | %handlers )"
.el .SS "to_sax ( \f(CW$handler\fP | \f(CW%handlers\fP )"
.IX Subsection "to_sax ( $handler | %handlers )"
Generates sax calls to the handler or handlers. See the PerlSAX docs for
details (not yet implemented correctly).
.SH "MORE INFO"
.IX Header "MORE INFO"
See the sub-classes for the meaning of the rest of the API:
.IP \(bu 4
XML::XPath::Node::Element
.IP \(bu 4
XML::XPath::Node::Attribute
.IP \(bu 4
XML::XPath::Node::Namespace
.IP \(bu 4
XML::XPath::Node::Text
.IP \(bu 4
XML::XPath::Node::Comment
.IP \(bu 4
XML::XPath::Node::PI
