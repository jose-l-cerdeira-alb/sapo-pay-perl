.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Alien::Build::Plugin::Probe::CommandLine 3"
.TH Alien::Build::Plugin::Probe::CommandLine 3 2023-05-11 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Alien::Build::Plugin::Probe::CommandLine \- Probe for tools or commands already available
.SH VERSION
.IX Header "VERSION"
version 2.80
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 7
\& use alienfile;
\& plugin \*(AqProbe::CommandLine\*(Aq => (
\&   command => \*(Aqgzip\*(Aq,
\&   args    => [ \*(Aq\-\-version\*(Aq ],
\&   match   => qr/gzip/,
\&   version => qr/gzip ([0\-9\e.]+)/,
\& );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This plugin probes for the existence of the given command line program.
.SH PROPERTIES
.IX Header "PROPERTIES"
.SS command
.IX Subsection "command"
The name of the command.
.SS args
.IX Subsection "args"
The arguments to pass to the command.
.SS secondary
.IX Subsection "secondary"
If you are using another probe plugin (such as Alien::Build::Plugin::Probe::CBuilder or
Alien::Build::Plugin::PkgConfig::Negotiate) to detect the existence of a library, but
also need a program to exist, then you should set secondary to a true value.  For example
when you need both:
.PP
.Vb 7
\& use alienfile;
\& # requires both liblzma library and xz program
\& plugin \*(AqPkgConfig\*(Aq => \*(Aqliblzma\*(Aq;
\& plugin \*(AqProbe::CommandLine\*(Aq => (
\&   command   => \*(Aqxz\*(Aq,
\&   secondary => 1,
\& );
.Ve
.PP
When you don't:
.PP
.Vb 5
\& use alienfile;
\& plugin \*(AqProbe::CommandLine\*(Aq => (
\&   command   => \*(Aqgzip\*(Aq,
\&   secondary => 0, # default
\& );
.Ve
.SS match
.IX Subsection "match"
Regular expression for which the program output should match.
.SS match_stderr
.IX Subsection "match_stderr"
Regular expression for which the program standard error should match.
.SS version
.IX Subsection "version"
Regular expression to parse out the version from the program output.
The regular expression should store the version number in \f(CW$1\fR.
.SS version_stderr
.IX Subsection "version_stderr"
Regular expression to parse out the version from the program standard error.
The regular expression should store the version number in \f(CW$1\fR.
.SS atleast_version
.IX Subsection "atleast_version"
The minimum required version as provided by the system.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Alien::Build, alienfile, Alien::Build::MM, Alien
.SH AUTHOR
.IX Header "AUTHOR"
Author: Graham Ollis <plicease@cpan.org>
.PP
Contributors:
.PP
Diab Jerius (DJERIUS)
.PP
Roy Storey (KIWIROY)
.PP
Ilya Pavlov
.PP
David Mertens (run4flat)
.PP
Mark Nunberg (mordy, mnunberg)
.PP
Christian Walde (Mithaldu)
.PP
Brian Wightman (MidLifeXis)
.PP
Zaki Mughal (zmughal)
.PP
mohawk (mohawk2, ETJ)
.PP
Vikas N Kumar (vikasnkumar)
.PP
Flavio Poletti (polettix)
.PP
Salvador Fandiño (salva)
.PP
Gianni Ceccarelli (dakkar)
.PP
Pavel Shaydo (zwon, trinitum)
.PP
Kang-min Liu (劉康民, gugod)
.PP
Nicholas Shipp (nshp)
.PP
Juan Julián Merelo Guervós (JJ)
.PP
Joel Berger (JBERGER)
.PP
Petr Písař (ppisar)
.PP
Lance Wicks (LANCEW)
.PP
Ahmad Fatoum (a3f, ATHREEF)
.PP
José Joaquín Atria (JJATRIA)
.PP
Duke Leto (LETO)
.PP
Shoichi Kaji (SKAJI)
.PP
Shawn Laffan (SLAFFAN)
.PP
Paul Evans (leonerd, PEVANS)
.PP
Håkon Hægland (hakonhagland, HAKONH)
.PP
nick nauwelaerts (INPHOBIA)
.PP
Florian Weimer
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2011\-2022 by Graham Ollis.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
