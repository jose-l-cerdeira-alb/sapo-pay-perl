.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test::XML::SAX 3"
.TH Test::XML::SAX 3 2024-01-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Test::XML::SAX \- Test XML::SAX handlers
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&  use Test::XML::SAX tests => 1;
\&  use My::XML::Filter;
\&
\&  my $handler = My::XML::Filter\->new;
\&  test_sax( $handler, \*(Aq<foo />\*(Aq, \*(Aq<bar/>\*(Aq, \*(Aqtranslates foo to bar\*(Aq );
\&
\&  # ... In Another File ...
\&
\&  use Test::XML::SAX; use My::XML::Filter;
\&  
\&  sub do_tests {
\&      my $handler = My::XML::Filter\->new;
\&      test_sax( $handler, \*(Aq<foo />\*(Aq, \*(Aq<bar/>\*(Aq, \*(Aqtranslates foo to bar\*(Aq );
\&  }
\&
\&  test_all_sax_parsers( \e&do_tests, 1 );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module is for testing XML::SAX handlers.
.SH FUNCTIONS
.IX Header "FUNCTIONS"
All functions are exported.
.IP "test_sax ( HANDLER, INPUT, EXPECTED [, TESTNAME ] )" 4
.IX Item "test_sax ( HANDLER, INPUT, EXPECTED [, TESTNAME ] )"
This function will process INPUT using HANDLER, and compare the result
with EXPECTED.  TESTNAME can optionally be used to name the test in the
output (a good idea).
.IP "test_all_sax_parsers ( SUB [, NUMTESTS ] )" 4
.IX Item "test_all_sax_parsers ( SUB [, NUMTESTS ] )"
This function will repeat a set of tests for all installed SAX parsers.
SUB must be a coderef to run a series of tests.  NUMTESTS is the number
of tests inside SUB.
.Sp
\&\fBNB\fR: You must not issue a plan to Test::More if you call this
function!  The plan will be set for you, according to the number of
parsers installed and NUMTESTS.  This also means that you must not have
any tests outside of SUB or you will get an error.
.Sp
When SUB is called, it will be passed two arguments.  The name of the
parser being used and the number of tests.  It can use this information
to decide whether or not to skip this set of tests.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Test::More, Test::XML, XML::SAX.
.SH AUTHOR
.IX Header "AUTHOR"
Dominic Mitchell, <cpan2 (at) semantico.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2002 by semantico
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
