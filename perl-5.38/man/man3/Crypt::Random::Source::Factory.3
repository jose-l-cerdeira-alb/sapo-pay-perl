.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Crypt::Random::Source::Factory 3"
.TH Crypt::Random::Source::Factory 3 2018-04-10 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Crypt::Random::Source::Factory \- Load and instantiate sources of random data
.SH VERSION
.IX Header "VERSION"
version 0.14
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Crypt::Random::Source::Factory;
\&
\&    my $f = Crypt::Random::Source::Factory\->new;
\&
\&    my $strong = $f\->get_strong;
\&
\&    my $weak = $f\->get_weak;
\&
\&    my $any = $f\->get;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This class implements a loading and instantiation factory for
Crypt::Random::Source objects.
.PP
If \f(CW$ENV{CRYPT_RANDOM_NOT_PLUGGABLE}\fR is set then only a preset list of
sources will be tried. Otherwise Module::Find will be used to locate any
installed sources, and use the first available one.
.SH METHODS
.IX Header "METHODS"
.ie n .SS "get %args"
.el .SS "get \f(CW%args\fP"
.IX Subsection "get %args"
Instantiate any random source, passing \f(CW%args\fR to the constructor.
.PP
The \f(CW\*(C`type\*(C'\fR argument can be \f(CW\*(C`weak\*(C'\fR, \f(CW\*(C`strong\*(C'\fR or \f(CW\*(C`any\*(C'\fR.
.ie n .SS "get_weak %args"
.el .SS "get_weak \f(CW%args\fP"
.IX Subsection "get_weak %args"
.ie n .SS "get_strong %args"
.el .SS "get_strong \f(CW%args\fP"
.IX Subsection "get_strong %args"
Instantiate a new weak or strong random source.
.SH SUPPORT
.IX Header "SUPPORT"
Bugs may be submitted through the RT bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=Crypt-Random-Source>
(or bug\-Crypt\-Random\-Source@rt.cpan.org <mailto:bug-Crypt-Random-Source@rt.cpan.org>).
.SH AUTHOR
.IX Header "AUTHOR"
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2008 by Yuval Kogman.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
