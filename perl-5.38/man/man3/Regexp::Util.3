.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Regexp::Util 3"
.TH Regexp::Util 3 2018-08-03 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Regexp::Util \- A selection of general\-utility regexp subroutines
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&   use Regexp::Util qw( :all );
\&   
\&   my $stringified = serialize_regexp( qr/^foo/ );
\&   my $regexp      = deserialize_regexp( $stringified );
\&   
\&   "foobar" =~ $regexp;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module provides the following functions:
.ie n .IP is_regexp($ref) 4
.el .IP \f(CWis_regexp($ref)\fR 4
.IX Item "is_regexp($ref)"
Returns a boolean indicating whether \f(CW$ref\fR is a regexp reference.
Is not tricked by blessed regexps.
.ie n .IP regexp_seen_evals($re) 4
.el .IP \f(CWregexp_seen_evals($re)\fR 4
.IX Item "regexp_seen_evals($re)"
Returns true if \f(CW$re\fR contains embedded Perl code.
.ie n .IP regexp_is_foreign($re) 4
.el .IP \f(CWregexp_is_foreign($re)\fR 4
.IX Item "regexp_is_foreign($re)"
Returns true if \f(CW$re\fR uses a regexp engine plugin.
.Sp
(Since Perl 5.10, it has been possible to use regexp engine plugins,
such as re::engine::PCRE and re::engine::RE2.)
.ie n .IP serialize_regexp($re) 4
.el .IP \f(CWserialize_regexp($re)\fR 4
.IX Item "serialize_regexp($re)"
Serializes the regexp to a string of Perl code.
.Sp
Croaks if the regexp contains embedded Perl code, or uses a regexp engine
plugin.
.ie n .IP deserialize_regexp($str) 4
.el .IP \f(CWdeserialize_regexp($str)\fR 4
.IX Item "deserialize_regexp($str)"
Evaluates a string of Perl code generated by \f(CW\*(C`serialize_regexp\*(C'\fR to
return the original regexp object. Uses Safe, and also checks that
the return value is a regexp, so should be \fIsomewhat\fR safer than
\&\f(CWeval($str)\fR.
.PP
This module can also re-export \f(CWregexp_pattern($re)\fR,
\&\f(CWregmust($re)\fR, \f(CW\*(C`regname($name, $all)\*(C'\fR,
\&\f(CWregnames($all)\fR, and \f(CWregnames_count()\fR from re
for convenience.
.SH BUGS
.IX Header "BUGS"
Please report any bugs to
<http://rt.cpan.org/Dist/Display.html?Queue=Regexp\-Util>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
More regexp stuff:
re.
.PP
Other util modules:
Scalar::Util,
List::Util,
Hash::Util.
.SH AUTHOR
.IX Header "AUTHOR"
Toby Inkster <tobyink@cpan.org>.
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2014, 2018 by Toby Inkster.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "DISCLAIMER OF WARRANTIES"
.IX Header "DISCLAIMER OF WARRANTIES"
THIS PACKAGE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
