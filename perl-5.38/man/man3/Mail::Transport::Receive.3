.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::Transport::Receive 3"
.TH Mail::Transport::Receive 3 2020-07-22 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Mail::Transport::Receive \- receive messages
.SH INHERITANCE
.IX Header "INHERITANCE"
.Vb 3
\& Mail::Transport::Receive
\&   is a Mail::Transport
\&   is a Mail::Reporter
\&
\& Mail::Transport::Receive is extended by
\&   Mail::Transport::IMAP4
\&   Mail::Transport::POP3
.Ve
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\& my $receiver = Mail::Transport::POP3\->new(...);
\& my $message = $receiver\->receive($id);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Each object which extends Mail::Transport::Receive implement
a protocol which can get messages into your application.  The internals
of each implementation can differ quite a lot, so have a look at each
separate manual page as well.
.PP
Current message receivers:
.IP \(bu 4
Mail::Transport::POP3
.Sp
Implements the POP3 protocol.  See also Mail::Box::POP3.
.PP
Extends "DESCRIPTION" in Mail::Transport.
.SH METHODS
.IX Header "METHODS"
Extends "METHODS" in Mail::Transport.
.SS Constructors
.IX Subsection "Constructors"
Extends "Constructors" in Mail::Transport.
.IP Mail::Transport::Receive\->\fBnew\fR(%options) 4
.IX Item "Mail::Transport::Receive->new(%options)"
Inherited, see "METHODS" in Mail::Transport
.SS "Receiving mail"
.IX Subsection "Receiving mail"
.ie n .IP "$obj\->\fBreceive\fR( [$unique_message_id] )" 4
.el .IP "\f(CW$obj\fR\->\fBreceive\fR( [$unique_message_id] )" 4
.IX Item "$obj->receive( [$unique_message_id] )"
Receive one message from the remote server.  Some receivers will provide
the next message automatically, other are random access and use the
specified ID.
.SS "Server connection"
.IX Subsection "Server connection"
Extends "Server connection" in Mail::Transport.
.ie n .IP "$obj\->\fBfindBinary\fR( $name, [@directories] )" 4
.el .IP "\f(CW$obj\fR\->\fBfindBinary\fR( \f(CW$name\fR, [@directories] )" 4
.IX Item "$obj->findBinary( $name, [@directories] )"
Inherited, see "Server connection" in Mail::Transport
.ie n .IP $obj\->\fBremoteHost\fR() 4
.el .IP \f(CW$obj\fR\->\fBremoteHost\fR() 4
.IX Item "$obj->remoteHost()"
Inherited, see "Server connection" in Mail::Transport
.ie n .IP $obj\->\fBretry\fR() 4
.el .IP \f(CW$obj\fR\->\fBretry\fR() 4
.IX Item "$obj->retry()"
Inherited, see "Server connection" in Mail::Transport
.SS "Error handling"
.IX Subsection "Error handling"
Extends "Error handling" in Mail::Transport.
.ie n .IP $obj\->\fBAUTOLOAD\fR() 4
.el .IP \f(CW$obj\fR\->\fBAUTOLOAD\fR() 4
.IX Item "$obj->AUTOLOAD()"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBaddReport\fR($object) 4
.el .IP \f(CW$obj\fR\->\fBaddReport\fR($object) 4
.IX Item "$obj->addReport($object)"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "\f(CW$obj\fR\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "$obj->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD 0
.ie n .IP "Mail::Transport::Receive\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "Mail::Transport::Receive\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "Mail::Transport::Receive->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBerrors\fR() 4
.el .IP \f(CW$obj\fR\->\fBerrors\fR() 4
.IX Item "$obj->errors()"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBlog\fR( [$level, [$strings]] )" 4
.el .IP "\f(CW$obj\fR\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "$obj->log( [$level, [$strings]] )"
.PD 0
.IP "Mail::Transport::Receive\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "Mail::Transport::Receive->log( [$level, [$strings]] )"
.PD
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBlogPriority\fR($level) 4
.el .IP \f(CW$obj\fR\->\fBlogPriority\fR($level) 4
.IX Item "$obj->logPriority($level)"
.PD 0
.IP Mail::Transport::Receive\->\fBlogPriority\fR($level) 4
.IX Item "Mail::Transport::Receive->logPriority($level)"
.PD
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBlogSettings\fR() 4
.el .IP \f(CW$obj\fR\->\fBlogSettings\fR() 4
.IX Item "$obj->logSettings()"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBnotImplemented\fR() 4
.el .IP \f(CW$obj\fR\->\fBnotImplemented\fR() 4
.IX Item "$obj->notImplemented()"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBreport\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreport\fR( [$level] )" 4
.IX Item "$obj->report( [$level] )"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBreportAll\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreportAll\fR( [$level] )" 4
.IX Item "$obj->reportAll( [$level] )"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP "$obj\->\fBtrace\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBtrace\fR( [$level] )" 4
.IX Item "$obj->trace( [$level] )"
Inherited, see "Error handling" in Mail::Reporter
.ie n .IP $obj\->\fBwarnings\fR() 4
.el .IP \f(CW$obj\fR\->\fBwarnings\fR() 4
.IX Item "$obj->warnings()"
Inherited, see "Error handling" in Mail::Reporter
.SS Cleanup
.IX Subsection "Cleanup"
Extends "Cleanup" in Mail::Transport.
.ie n .IP $obj\->\fBDESTROY\fR() 4
.el .IP \f(CW$obj\fR\->\fBDESTROY\fR() 4
.IX Item "$obj->DESTROY()"
Inherited, see "Cleanup" in Mail::Reporter
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
.ie n .IP "Warning: Avoid program abuse: specify an absolute path for $exec." 4
.el .IP "Warning: Avoid program abuse: specify an absolute path for \f(CW$exec\fR." 4
.IX Item "Warning: Avoid program abuse: specify an absolute path for $exec."
Specifying explicit locations for executables of email transfer agents
should only be done with absolute file names, to avoid various pontential
security problems.
.ie n .IP "Warning: Executable $exec does not exist." 4
.el .IP "Warning: Executable \f(CW$exec\fR does not exist." 4
.IX Item "Warning: Executable $exec does not exist."
The explicitly indicated mail transfer agent does not exists. The normal
settings are used to find the correct location.
.ie n .IP "Error: Package $package does not implement $method." 4
.el .IP "Error: Package \f(CW$package\fR does not implement \f(CW$method\fR." 4
.IX Item "Error: Package $package does not implement $method."
Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Mail-Transport distribution version 3.005,
built on July 22, 2020. Website: \fIhttp://perl.overmeer.net/CPAN/\fR
.SH LICENSE
.IX Header "LICENSE"
Copyrights 2001\-2020 by [Mark Overmeer]. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://dev.perl.org/licenses/\fR
