.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Crypt::Random::Source 3"
.TH Crypt::Random::Source 3 2018-04-10 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Crypt::Random::Source \- Get weak or strong random data from pluggable sources
.SH VERSION
.IX Header "VERSION"
version 0.14
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Crypt::Random::Source qw(get_strong);
\&
\&    # get 10 cryptographically strong random bytes from an available source
\&    my $bytes = get_strong(10);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module provides implementations for a number of byte oriented sources of
random data.
.PP
See Crypt::Random::Source::Factory for a more powerful way to locate
sources, and the various sources for specific implementations.
.SH EXPORTS
.IX Header "EXPORTS"
.IP get 4
.IX Item "get"
.PD 0
.IP get_weak 4
.IX Item "get_weak"
.IP get_strong 4
.IX Item "get_strong"
.PD
These functions delegate to a source chosen by an instance of
Crypt::Random::Source::Factory, calling get
.SH CAVEATS
.IX Header "CAVEATS"
In versions prior to 0.13, \f(CW\*(C`rand\*(C'\fR could be used as a result of calling
\&\f(CW\*(C`get_weak\*(C'\fR, or \f(CW\*(C`get\*(C'\fR, if no random device was available. This implies that
not explicitly asking for \f(CW\*(C`get_strong\*(C'\fR on a non POSIX operating system (e.g.
Win32 without the Win32 backend) could have resulted in non cryptographically
random data.
.PP
Relatedly, the characterization of \f(CW\*(C`urandom\*(C'\fR as a weak source of randomness is
also largely a misconception, see <https://www.2uo.de/myths\-about\-urandom/>
for example.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Crypt::Random, Crypt::Util
.SH SUPPORT
.IX Header "SUPPORT"
Bugs may be submitted through the RT bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=Crypt-Random-Source>
(or bug\-Crypt\-Random\-Source@rt.cpan.org <mailto:bug-Crypt-Random-Source@rt.cpan.org>).
.SH AUTHOR
.IX Header "AUTHOR"
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.SH CONTRIBUTORS
.IX Header "CONTRIBUTORS"
.IP \(bu 4
Karen Etheridge <ether@cpan.org>
.IP \(bu 4
Florian Ragwitz <rafl@debian.org>
.IP \(bu 4
Graham Knop <haarg@haarg.org>
.IP \(bu 4
David Pottage <spudsoup@cpan.org>
.IP \(bu 4
Max Kanat-Alexander <mkanat@es\-compy.(none)>
.IP \(bu 4
Edward Betts <edward@4angle.com>
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2008 by Yuval Kogman.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
