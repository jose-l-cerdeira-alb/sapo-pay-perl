.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Specio::Constraint::AnyDoes 3"
.TH Specio::Constraint::AnyDoes 3 2022-06-11 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Specio::Constraint::AnyDoes \- A class for constraints which require a class name or an object that does a specific role
.SH VERSION
.IX Header "VERSION"
version 0.48
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&    my $type = Specio::Constraint::AnyDoes\->new(...);
\&    print $type\->role;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is a specialized type constraint class for types which require a class
name or an object that does a specific role.
.SH API
.IX Header "API"
This class provides all of the same methods as Specio::Constraint::Simple,
with a few differences:
.SS "Specio::Constraint::AnyDoes\->new( ... )"
.IX Subsection "Specio::Constraint::AnyDoes->new( ... )"
The \f(CW\*(C`parent\*(C'\fR parameter is ignored if it passed, as it is always set to the
\&\f(CW\*(C`Defined\*(C'\fR type.
.PP
The \f(CW\*(C`inline_generator\*(C'\fR and \f(CW\*(C`constraint\*(C'\fR parameters are also ignored. This
class provides its own default inline generator subroutine reference.
.PP
This class overrides the \f(CW\*(C`message_generator\*(C'\fR default if none is provided.
.PP
Finally, this class requires an additional parameter, \f(CW\*(C`role\*(C'\fR. This must be a
single role name.
.ie n .SS $any_isa\->role
.el .SS \f(CW$any_isa\fP\->role
.IX Subsection "$any_isa->role"
Returns the role name passed to the constructor.
.SH ROLES
.IX Header "ROLES"
This class does the Specio::Constraint::Role::DoesType,
Specio::Constraint::Role::Interface, Specio::Role::Inlinable, and
MooseX::Clone roles.
.SH SUPPORT
.IX Header "SUPPORT"
Bugs may be submitted at <https://github.com/houseabsolute/Specio/issues>.
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Specio can be found at <https://github.com/houseabsolute/Specio>.
.SH AUTHOR
.IX Header "AUTHOR"
Dave Rolsky <autarch@urth.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2012 \- 2022 by Dave Rolsky.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve
.PP
The full text of the license can be found in the
\&\fILICENSE\fR file included with this distribution.
