.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XML::SemanticDiff 3"
.TH XML::SemanticDiff 3 2024-01-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
XML::SemanticDiff \- Perl extension for comparing XML documents.
.SH VERSION
.IX Header "VERSION"
version 1.0007
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&  use XML::SemanticDiff;
\&  my $diff = XML::SemanticDiff\->new();
\&
\&  foreach my $change ($diff\->compare($file, $file2)) {
\&      print "$change\->{message} in context $change\->{context}\en";
\&  }
\&
\&  # or, if you want line numbers:
\&
\&  my $diff = XML::SemanticDiff\->new(keeplinenums => 1);
\&
\&  foreach my $change ($diff\->compare($file, $file2)) {
\&      print "$change\->{message} (between lines $change\->{startline} and $change\->{endline})\en";
\&  }
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
XML::SematicDiff provides a way to compare the contents and structure of two XML documents. By default, it returns a list of
hashrefs where each hashref describes a single difference between the two docs.
.SH VERSION
.IX Header "VERSION"
version 1.0007
.SH METHODS
.IX Header "METHODS"
.ie n .SS $obj\->new([%options])
.el .SS \f(CW$obj\fP\->new([%options])
.IX Subsection "$obj->new([%options])"
Ye olde object constructor.
.PP
The \fBnew()\fR method recognizes the following options:
.IP \(bu 4
keeplinenums
.Sp
When this option is enabled XML::SemanticDiff will add the 'startline' and 'endline' properties (containing the line numbers
for the reported element's start tag and end tag) to each warning. For attribute events these numbers reflect the start and
end tags of the element which contains that attribute.
.IP \(bu 4
keepdata
.Sp
When this option is enabled XML::SemanticDiff will add the 'old_value' and 'new_value' properties to each warning. These
properties contain, surprisingly, the old and new values for the element or attribute being reported.
.Sp
In the case of missing elements or attributes (those in the first document, not in the second) only the 'old_value' property
will be defined. Similarly, in the case of rogue elements or attributes (those in the second document but not in the
first) only the 'new_value' property will be defined.
.Sp
Note that using this option will greatly increase the amount of memory used by your application.
.IP \(bu 4
diffhandler
.Sp
Taking a blessed object as it's sole argument, this option provides a way to hook the basic semantic diff engine into your own
custom handler class.
.Sp
Please see the section on 'CUSTOM HANDLERS' below.
.IP \(bu 4
ignorexpath
.Sp
This option takes array of strings as argument. Strings are interpreted as simple xpath expressions. Nodes matching these expressions are ignored during comparison. All xpath expressions should be absolute (start with '/').
.Sp
Current implementation ignores namespaces during comparison.
.ie n .SS "@results = $differ\->compare($xml1, $xml2)"
.el .SS "\f(CW@results\fP = \f(CW$differ\fP\->compare($xml1, \f(CW$xml2\fP)"
.IX Subsection "@results = $differ->compare($xml1, $xml2)"
Compares the XMLs \f(CW$xml1\fR and \f(CW$xml2\fR . \f(CW$xml1\fR and \f(CW$xml2\fR can be:
.IP \(bu 4
filenames
.Sp
This will be considered if it is a string that does not contain newlines and
exists in the filesystem.
.IP \(bu 4
the XML text itself.
.Sp
This will be considered if it's any kind of string.
.IP \(bu 4
the results of \fBread_xml()\fR. (see below)
.Sp
This will be considered if it's a hash reference.
.ie n .SS "my $doc = read_xml($xml_location)"
.el .SS "my \f(CW$doc\fP = read_xml($xml_location)"
.IX Subsection "my $doc = read_xml($xml_location)"
This will read the XML, process it for comparison and return it. See \fBcompare()\fR
for how it is determined.
.SH "CUSTOM HANDLERS"
.IX Header "CUSTOM HANDLERS"
Internally, XML::SemanticDiff uses an event-based model somewhat reminiscent of SAX where the various 'semantic diff events'
are handed off to a separate handler class to cope with the details. For most general cases where the user only cares about
reporting the differences between two docs, the default handler, XML::SemanticDiff::BasicHandler, will probably
suffice. However, it is often desirable to add side-effects to the diff process (updating datastores, widget callbacks,
etc.) and a custom handler allows you to be creative with what to do about differences between two XML documents and how
those differences are reported back to the application through the \fBcompare()\fR method.
.SH "HANDLER METHODS"
.IX Header "HANDLER METHODS"
The following is a list of handler methods that can be used for your custom diff-handler class.
.ie n .SS "init($self, $diff_obj)"
.el .SS "init($self, \f(CW$diff_obj\fP)"
.IX Subsection "init($self, $diff_obj)"
The \f(CW\*(C`init\*(C'\fR method is called immediately before the the two document HASHes are compared. The blessed XML::SemanticDiff object
is passed as the sole argument, so any values that you wish to pass from your application to your custom handler can safely
be added to the call to XML::SemanticDiff's constructor method.
.ie n .SS "rogue_element($self, $element_name, $todoc_element_properties)"
.el .SS "rogue_element($self, \f(CW$element_name\fP, \f(CW$todoc_element_properties\fP)"
.IX Subsection "rogue_element($self, $element_name, $todoc_element_properties)"
The \f(CW\*(C`rogue_element\*(C'\fR method handles those cases where a given element exists in the to-file but not in the from-file.
.ie n .SS "missing_element($self, $element_name, $fromdoc_element_properties)"
.el .SS "missing_element($self, \f(CW$element_name\fP, \f(CW$fromdoc_element_properties\fP)"
.IX Subsection "missing_element($self, $element_name, $fromdoc_element_properties)"
The \f(CW\*(C`missing_element\*(C'\fR method handles those cases where a given element exists in the from-file but not in the to-file.
.ie n .SS "element_value($self, $element, $to_element_properties, $fromdoc_element_properties)"
.el .SS "element_value($self, \f(CW$element\fP, \f(CW$to_element_properties\fP, \f(CW$fromdoc_element_properties\fP)"
.IX Subsection "element_value($self, $element, $to_element_properties, $fromdoc_element_properties)"
The \f(CW\*(C`element_value\*(C'\fR method handles those cases where the text data differs between two elements that have the same name,
namespace URI, and are at the same location in the document tree. Note that all whitespace is normalized and the text from
mixed-content elements (those containing both text and child elements mixed together) is aggregated down to a single value.
.ie n .SS "namespace_uri($self, $element, $todoc_element_properties, $fromdoc_element_properties)"
.el .SS "namespace_uri($self, \f(CW$element\fP, \f(CW$todoc_element_properties\fP, \f(CW$fromdoc_element_properties\fP)"
.IX Subsection "namespace_uri($self, $element, $todoc_element_properties, $fromdoc_element_properties)"
The \f(CW\*(C`namespace_uri\*(C'\fR method handles case where the XML namespace URI differs between a given element in the two
documents. Note that the namespace URI is checked, not the element prefixes since <foo:element/> <bar:element/> and <element/>
are all considered equivalent as long as they are bound to the same namespace URI.
.ie n .SS "rogue_attribute($self, $attr_name, $element, $todoc_element_properties)"
.el .SS "rogue_attribute($self, \f(CW$attr_name\fP, \f(CW$element\fP, \f(CW$todoc_element_properties\fP)"
.IX Subsection "rogue_attribute($self, $attr_name, $element, $todoc_element_properties)"
The \f(CW\*(C`rogue_attribute\*(C'\fR method handles those cases where an attribute exists in a given element the to-file but not in the
from-file.
.ie n .SS "missing_attribute($self, $attr_name, $element, $todoc_element_properties, $fromdoc_element_properties)"
.el .SS "missing_attribute($self, \f(CW$attr_name\fP, \f(CW$element\fP, \f(CW$todoc_element_properties\fP, \f(CW$fromdoc_element_properties\fP)"
.IX Subsection "missing_attribute($self, $attr_name, $element, $todoc_element_properties, $fromdoc_element_properties)"
The \f(CW\*(C`missing_attribute\*(C'\fR method handles those cases where an attribute exists in a given element exists in the from-file but
not in the to-file.
.ie n .SS "attribute_value($self, $attr_name, $element, $todoc_element_properties, $fromdoc_element_properties)"
.el .SS "attribute_value($self, \f(CW$attr_name\fP, \f(CW$element\fP, \f(CW$todoc_element_properties\fP, \f(CW$fromdoc_element_properties\fP)"
.IX Subsection "attribute_value($self, $attr_name, $element, $todoc_element_properties, $fromdoc_element_properties)"
The \f(CW\*(C`attribute_value\*(C'\fR method handles those cases where the value of an attribute varies between the same element in both
documents.
.ie n .SS "final($self, $diff_obj)"
.el .SS "final($self, \f(CW$diff_obj\fP)"
.IX Subsection "final($self, $diff_obj)"
The \f(CW\*(C`final\*(C'\fR method is called immediately after the two document HASHes are compared. Like the \f(CW\*(C`init\*(C'\fR handler, it is passed a
copy of the XML::SemanticDiff object as it's sole argument.
.PP
Note that if a given method is not implemented in your custom handler class, XML::SemanticDiff will not complain; but it means
that all of those events will be silently ignored. Consider yourself warned.
.SH AUTHOR
.IX Header "AUTHOR"
Originally by Kip Hampton, khampton@totalcinema.com .
.PP
Further Maintained by Shlomi Fish, <http://www.shlomifish.org/> .
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (c) 2000 Kip Hampton. All rights reserved. This program is
free software; you can redistribute it and/or modify it under the same terms
as Perl itself.
.PP
Shlomi Fish hereby disclaims any implicit or explicit copyrights on this
software.
.SH LICENSE
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBperl\fR\|(1).
.SH AUTHORS
.IX Header "AUTHORS"
.IP \(bu 4
Shlomi Fish <shlomif@cpan.org>
.IP \(bu 4
Chris Prather <chris.prather@tamarou.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2001 by Kip Hampton.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH BUGS
.IX Header "BUGS"
Please report any bugs or feature requests on the bugtracker website
<https://github.com/shlomif/perl\-XML\-SemanticDiff/issues>
.PP
When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.
.SH SUPPORT
.IX Header "SUPPORT"
.SS Perldoc
.IX Subsection "Perldoc"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&  perldoc XML::SemanticDiff
.Ve
.SS Websites
.IX Subsection "Websites"
The following websites have more information about this module, and may be of help to you. As always,
in addition to those websites please use your favorite search engine to discover more resources.
.IP \(bu 4
MetaCPAN
.Sp
A modern, open-source CPAN search engine, useful to view POD in HTML format.
.Sp
<https://metacpan.org/release/XML\-SemanticDiff>
.IP \(bu 4
Search CPAN
.Sp
The default CPAN search engine, useful to view POD in HTML format.
.Sp
<http://search.cpan.org/dist/XML\-SemanticDiff>
.IP \(bu 4
RT: CPAN's Bug Tracker
.Sp
The RT ( Request Tracker ) website is the default bug/issue tracking system for CPAN.
.Sp
<https://rt.cpan.org/Public/Dist/Display.html?Name=XML\-SemanticDiff>
.IP \(bu 4
AnnoCPAN
.Sp
The AnnoCPAN is a website that allows community annotations of Perl module documentation.
.Sp
<http://annocpan.org/dist/XML\-SemanticDiff>
.IP \(bu 4
CPAN Ratings
.Sp
The CPAN Ratings is a website that allows community ratings and reviews of Perl modules.
.Sp
<http://cpanratings.perl.org/d/XML\-SemanticDiff>
.IP \(bu 4
CPANTS
.Sp
The CPANTS is a website that analyzes the Kwalitee ( code metrics ) of a distribution.
.Sp
<http://cpants.cpanauthors.org/dist/XML\-SemanticDiff>
.IP \(bu 4
CPAN Testers
.Sp
The CPAN Testers is a network of smoke testers who run automated tests on uploaded CPAN distributions.
.Sp
<http://www.cpantesters.org/distro/X/XML\-SemanticDiff>
.IP \(bu 4
CPAN Testers Matrix
.Sp
The CPAN Testers Matrix is a website that provides a visual overview of the test results for a distribution on various Perls/platforms.
.Sp
<http://matrix.cpantesters.org/?dist=XML\-SemanticDiff>
.IP \(bu 4
CPAN Testers Dependencies
.Sp
The CPAN Testers Dependencies is a website that shows a chart of the test results of all dependencies for a distribution.
.Sp
<http://deps.cpantesters.org/?module=XML::SemanticDiff>
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests by email to \f(CW\*(C`bug\-xml\-semanticdiff at rt.cpan.org\*(C'\fR, or through
the web interface at <https://rt.cpan.org/Public/Bug/Report.html?Queue=XML\-SemanticDiff>. You will be automatically notified of any
progress on the request by the system.
.SS "Source Code"
.IX Subsection "Source Code"
The code is open to the world, and available for you to hack on. Please feel free to browse it and play
with it, or whatever. If you want to contribute patches, please send me a diff or prod me to pull
from your repository :)
.PP
<https://github.com/shlomif/perl\-XML\-SemanticDiff>
.PP
.Vb 1
\&  git clone git://github.com/shlomif/perl\-XML\-SemanticDiff.git
.Ve
