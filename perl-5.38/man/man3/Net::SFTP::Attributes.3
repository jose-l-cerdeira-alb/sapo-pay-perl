.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::SFTP::Attributes 3"
.TH Net::SFTP::Attributes 3 2017-04-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Net::SFTP::Attributes \- File/directory attribute container
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 3
\&    use Net::SFTP::Attributes;
\&    my $attrs = Net::SFTP::Attributes\->new(Stat => [ stat "foo" ]);
\&    my $size = $attrs\->size;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fINet::SFTP::Attributes\fR encapsulates file/directory attributes
for \fINet::SFTP\fR. It also provides serialization and
deserialization methods to encode/decode attributes into
\&\fINet::SFTP::Buffer\fR objects.
.SH USAGE
.IX Header "USAGE"
.ie n .SS "Net::SFTP::Attributes\->new( [ %args ] )"
.el .SS "Net::SFTP::Attributes\->new( [ \f(CW%args\fP ] )"
.IX Subsection "Net::SFTP::Attributes->new( [ %args ] )"
Constructs a new \fINet::SFTP::Attributes\fR object and returns
that object.
.PP
\&\fR\f(CI%args\fR\fI\fR is optional; if not provided the object will be
initialized with the default values. If provided, \fI\fR\f(CI%args\fR\fI\fR
can contain:
.IP \(bu 4
Stat
.Sp
A reference to the return value of the built-in \fIstat\fR
function. The values in the \fINet::SFTP::Attributes\fR object
will be initialized from the values in the \fIstat\fR array,
and the flags will be set appropriately.
.IP \(bu 4
Buffer
.Sp
A \fINet::SFTP::Buffer\fR object containing a serialized
attribute object. The \fINet::SFTP::Attributes\fR object will
be initialized from the values in the serialized string,
and flags will be set appropriately.
.ie n .SS $attrs\->as_buffer
.el .SS \f(CW$attrs\fP\->as_buffer
.IX Subsection "$attrs->as_buffer"
Serializes the \fIAttributes\fR object \fR\f(CI$attrs\fR\fI\fR into string
form, using the flags in the object to determine what fields
get placed in the buffer. Returns a \fINet::SFTP::Buffer\fR
object.
.ie n .SS "$attrs\->flags( [ $value ] )"
.el .SS "\f(CW$attrs\fP\->flags( [ \f(CW$value\fP ] )"
.IX Subsection "$attrs->flags( [ $value ] )"
Get/set the value of the flags in \fR\f(CI$attrs\fR\fI\fR.
.ie n .SS "$attrs\->size( [ $value ] )"
.el .SS "\f(CW$attrs\fP\->size( [ \f(CW$value\fP ] )"
.IX Subsection "$attrs->size( [ $value ] )"
Get/set the value of the file size (in bytes) in \fR\f(CI$attrs\fR\fI\fR.
.ie n .SS "$attrs\->uid( [ $value ] )"
.el .SS "\f(CW$attrs\fP\->uid( [ \f(CW$value\fP ] )"
.IX Subsection "$attrs->uid( [ $value ] )"
Get/set the value of the UID in \fR\f(CI$attrs\fR\fI\fR.
.ie n .SS "$attrs\->gid( [ $value ] )"
.el .SS "\f(CW$attrs\fP\->gid( [ \f(CW$value\fP ] )"
.IX Subsection "$attrs->gid( [ $value ] )"
Get/set the value of the GID in \fR\f(CI$attrs\fR\fI\fR.
.ie n .SS "$attrs\->perm( [ $value ] )"
.el .SS "\f(CW$attrs\fP\->perm( [ \f(CW$value\fP ] )"
.IX Subsection "$attrs->perm( [ $value ] )"
Get/set the value of the permissions in \fR\f(CI$attrs\fR\fI\fR.
.ie n .SS "$attrs\->atime( [ $value ] )"
.el .SS "\f(CW$attrs\fP\->atime( [ \f(CW$value\fP ] )"
.IX Subsection "$attrs->atime( [ $value ] )"
Get/set the value of the last access time (atime) in \fR\f(CI$attrs\fR\fI\fR.
.ie n .SS "$attrs\->mtime( [ $value ] )"
.el .SS "\f(CW$attrs\fP\->mtime( [ \f(CW$value\fP ] )"
.IX Subsection "$attrs->mtime( [ $value ] )"
Get/set the value of the last modified time (mtime) in \fR\f(CI$attrs\fR\fI\fR.
.SH "AUTHOR & COPYRIGHTS"
.IX Header "AUTHOR & COPYRIGHTS"
Please see the Net::SFTP manpage for author, copyright, and
license information.
