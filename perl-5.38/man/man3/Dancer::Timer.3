.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dancer::Timer 3"
.TH Dancer::Timer 3 2023-02-08 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Dancer::Timer \- a timer for Dancer
.SH VERSION
.IX Header "VERSION"
version 1.3521
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Dancer::Timer;
\&
\&    my $timer = Dancer::Timer\->new();
\&    my $time  = $timer\->tick;
\&    print "[$time]: Doing something\en";
\&
\&    # (time passes)
\&    $time = $timer\->tick;
\&    print "[$time]: Doing something else\en";
\&
\&    # (time passes)
\&    $time = $timer\->to_string;
\&    print "[$time]: Doing another thing\en";
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Dancer::Timer provides Dancer with a timing object to clock operations. For
example, you might want a logging that shows you when each operation happened
(at what time) to determine how long each operation was in order to know where
to focus on for possible bugs or perhaps unnecessary slowness.
.PP
Dancer uses Dancer::Timer in facilities that want to provide this for you. Any
plugin author is more than welcome to use it as well.
.SH ATTRIBUTES
.IX Header "ATTRIBUTES"
.SS start_time
.IX Subsection "start_time"
Retains the starting time of the timer. The default value is when the object is
created. It fetches that using \f(CW\*(C`gettimeofday\*(C'\fR from Time::HiRes.
.SH METHODS
.IX Header "METHODS"
.SS init
.IX Subsection "init"
This method is called when \f(CW\*(C`\->new()\*(C'\fR is called. It initializes the
\&\f(CW\*(C`start_time\*(C'\fR attribute.
.SS tick
.IX Subsection "tick"
Creates a tick in the timer and returns the interval between the \f(CW\*(C`start_time\*(C'\fR
and now.
.SS to_string
.IX Subsection "to_string"
Same as \f(CW\*(C`tick\*(C'\fR, just more expressive.
.SH AUTHOR
.IX Header "AUTHOR"
Dancer Core Developers
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2010 by Alexis Sukrieh.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
