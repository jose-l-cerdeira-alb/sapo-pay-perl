.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CGI::Pretty 3"
.TH CGI::Pretty 3 2024-01-08 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
CGI::Pretty \- module to produce nicely formatted HTML code
.SH "CGI::Pretty IS DEPRECATED"
.IX Header "CGI::Pretty IS DEPRECATED"
It will be removed from the CGI distribution in a future release, so you
should no longer use it and remove it from any code that currently uses it.
.PP
For now it has been reduced to a shell to prevent your code breaking, but
the "pretty" functions will no longer output "pretty" HTML.
.SH Alternatives
.IX Header "Alternatives"
HTML::HTML5::Parser + HTML::HTML5::Writer + XML::LibXML::PrettyPrint:
.PP
.Vb 9
\&    print HTML::HTML5::Writer\->new(
\&        start_tags => \*(Aqforce\*(Aq,
\&        end_tags   => \*(Aqforce\*(Aq,
\&    )\->document(
\&        XML::LibXML::PrettyPrint\->new_for_html( indent_string => "\et" )
\&        \->pretty_print(
\&            HTML::HTML5::Parser\->new\->parse_string( $html_string )
\&        )
\&    );
.Ve
.PP
Marpa::R2::HTML (see the html_fmt script for examples)
.PP
HTML::Tidy
.PP
HTML::Parser
