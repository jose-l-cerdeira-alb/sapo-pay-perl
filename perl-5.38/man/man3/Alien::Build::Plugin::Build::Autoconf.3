.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Alien::Build::Plugin::Build::Autoconf 3"
.TH Alien::Build::Plugin::Build::Autoconf 3 2023-05-11 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Alien::Build::Plugin::Build::Autoconf \- Autoconf plugin for Alien::Build
.SH VERSION
.IX Header "VERSION"
version 2.80
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\& use alienfile;
\& plugin \*(AqBuild::Autoconf\*(Aq;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This plugin provides some tools for building projects that use autoconf.  The main thing
this provides is a \f(CW\*(C`configure\*(C'\fR helper, documented below and the default build stage,
which is:
.PP
.Vb 3
\& \*(Aq%{configure} \-\-disable\-shared\*(Aq,
\& \*(Aq%{make}\*(Aq,
\& \*(Aq%{make} install\*(Aq,
.Ve
.PP
On Windows, this plugin also pulls in the Alien::Build::Plugin::Build::MSYS which is
required for autoconf style projects on windows.
.PP
The other thing that this plugin does is that it does a double staged \f(CW\*(C`DESTDIR\*(C'\fR install.
The author has found this improves the overall reliability of Alien modules that are
based on autoconf packages.
.PP
This plugin supports out-of-source builds (known in autoconf terms as "VPATH" builds) via
the meta property \f(CW\*(C`out_of_source\*(C'\fR.
.PP
\&\fBNOTE\fR: by itself, this plugin is only intended for use on packages that include a
\&\f(CW\*(C`configure\*(C'\fR script.  For packages that expect you to use Autotools to generate a
configure script before building, you can use Alien::Autotools to generate the
\&\f(CW\*(C`configure\*(C'\fR script and use this plugin to run it.  For more details see the
documentation for Alien::Autotools.
.SH PROPERTIES
.IX Header "PROPERTIES"
.SS with_pic
.IX Subsection "with_pic"
Adds \f(CW\*(C`\-\-with\-pic\*(C'\fR option when running \f(CW\*(C`configure\*(C'\fR.  If supported by your package, it
will generate position independent code on platforms that support it.  This is required
to XS modules, and generally what you want.
.PP
autoconf normally ignores options that it does not understand, so it is usually a safe
and reasonable default to include it.  A small number of projects look like they use
autoconf, but are really an autoconf style interface with a different implementation.
They may fail if you try to provide it with options such as \f(CW\*(C`\-\-with\-pic\*(C'\fR that they do
not recognize.  Such packages are the rationale for this property.
.SS msys_version
.IX Subsection "msys_version"
The version of Alien::MSYS required if it is deemed necessary.  If Alien::MSYS
isn't needed (if running under Unix, or MSYS2, for example) this will do nothing.
.SS config_site
.IX Subsection "config_site"
The content for the generated \f(CW\*(C`config.site\*(C'\fR.
.SH HELPERS
.IX Header "HELPERS"
.SS configure
.IX Subsection "configure"
.Vb 1
\& %{configure}
.Ve
.PP
The correct incantation to start an autoconf style \f(CW\*(C`configure\*(C'\fR script on your platform.
Some reasonable default flags will be provided.
.SH ENVIRONMENT
.IX Header "ENVIRONMENT"
.ie n .IP """SITE_CONFIG""" 4
.el .IP \f(CWSITE_CONFIG\fR 4
.IX Item "SITE_CONFIG"
For a share install, this plugin needs to alter the behavior of autotools using \f(CW\*(C`site.config\*(C'\fR.
It does this by generating a \f(CW\*(C`site.config\*(C'\fR file on the fly, and setting the \f(CW\*(C`SITE_CONFIG\*(C'\fR
environment variable.  In the event that you already have your own \f(CW\*(C`SITE_CONFIG\*(C'\fR set, that
file will be sourced from the generated one, so your local defaults should still be honored,
unless it is one that needs to be changed for a share install.
.Sp
In particular, the \f(CW\*(C`lib\*(C'\fR directory must be overridden, because on some platforms dynamic libraries
will otherwise be placed in directories that Alien::Build doesn't normally look in.  Since
the alienized package will be installed in a share directory, and not a system directory,
that should be fine.
.ie n .IP """ALIEN_BUILD_SITE_CONFIG""" 4
.el .IP \f(CWALIEN_BUILD_SITE_CONFIG\fR 4
.IX Item "ALIEN_BUILD_SITE_CONFIG"
If defined, this file will be also be sourced in the generated \f(CW\*(C`site.config\*(C'\fR.  This allows
you to have local defaults for alien share installs only.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Alien::Build::Plugin::Build::MSYS, Alien::Build::Plugin, Alien::Build, Alien::Base, Alien
.PP
<https://www.gnu.org/software/autoconf/autoconf.html>
.PP
<https://www.gnu.org/prep/standards/html_node/DESTDIR.html>
.SH AUTHOR
.IX Header "AUTHOR"
Author: Graham Ollis <plicease@cpan.org>
.PP
Contributors:
.PP
Diab Jerius (DJERIUS)
.PP
Roy Storey (KIWIROY)
.PP
Ilya Pavlov
.PP
David Mertens (run4flat)
.PP
Mark Nunberg (mordy, mnunberg)
.PP
Christian Walde (Mithaldu)
.PP
Brian Wightman (MidLifeXis)
.PP
Zaki Mughal (zmughal)
.PP
mohawk (mohawk2, ETJ)
.PP
Vikas N Kumar (vikasnkumar)
.PP
Flavio Poletti (polettix)
.PP
Salvador Fandiño (salva)
.PP
Gianni Ceccarelli (dakkar)
.PP
Pavel Shaydo (zwon, trinitum)
.PP
Kang-min Liu (劉康民, gugod)
.PP
Nicholas Shipp (nshp)
.PP
Juan Julián Merelo Guervós (JJ)
.PP
Joel Berger (JBERGER)
.PP
Petr Písař (ppisar)
.PP
Lance Wicks (LANCEW)
.PP
Ahmad Fatoum (a3f, ATHREEF)
.PP
José Joaquín Atria (JJATRIA)
.PP
Duke Leto (LETO)
.PP
Shoichi Kaji (SKAJI)
.PP
Shawn Laffan (SLAFFAN)
.PP
Paul Evans (leonerd, PEVANS)
.PP
Håkon Hægland (hakonhagland, HAKONH)
.PP
nick nauwelaerts (INPHOBIA)
.PP
Florian Weimer
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2011\-2022 by Graham Ollis.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
