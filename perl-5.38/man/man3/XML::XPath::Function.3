.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XML::XPath::Function 3"
.TH XML::XPath::Function 3 2022-08-09 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
XML::XPath::Functions \- implementations of XPath functions
.SH DESCRIPTION
.IX Header "DESCRIPTION"
XPath 1.0 and some later functions are supported.
.PP
Note that functions that take regular expressions use Perl-syntax REs,
not the language described in the XPath spec.
.SH FUNCTIONS
.IX Header "FUNCTIONS"
.SS "NODESET FUNCTIONS"
.IX Subsection "NODESET FUNCTIONS"
.IP \(bu 4
\&\f(CWlast()\fR
.IP \(bu 4
\&\f(CWposition()\fR
.IP \(bu 4
\&\f(CWcount()\fR
.IP \(bu 4
\&\f(CWid()\fR
.IP \(bu 4
\&\f(CW\*(C`local\-name()\*(C'\fR
.IP \(bu 4
\&\f(CWname()\fR
.IP \(bu 4
\&\f(CW\*(C`namespace\-uri()\*(C'\fR
.SS "STRING FUNCTIONS"
.IX Subsection "STRING FUNCTIONS"
\fIFunctions On String Values\fR
.IX Subsection "Functions On String Values"
.IP \(bu 4
\&\f(CWstring()\fR
.IP \(bu 4
\&\f(CWconcat()\fR
.IP \(bu 4
\&\f(CWsubstring()\fR
.IP \(bu 4
\&\f(CW\*(C`string\-length()\*(C'\fR
.IP \(bu 4
\&\f(CW\*(C`normalize\-space()\*(C'\fR
.IP \(bu 4
\&\f(CWtranslate()\fR
.PP
\fIFunctions Based on Substring Matching\fR
.IX Subsection "Functions Based on Substring Matching"
.IP \(bu 4
\&\f(CWcontains()\fR
.IP \(bu 4
\&\f(CW\*(C`starts\-with()\*(C'\fR
.IP \(bu 4
\&\f(CW\*(C`substring\-before()\*(C'\fR
.IP \(bu 4
\&\f(CW\*(C`substring\-after()\*(C'\fR
.PP
\fIString Functions that Use Pattern Matching\fR
.IX Subsection "String Functions that Use Pattern Matching"
.IP \(bu 4
\&\f(CWmatches()\fR
.SS "BOOLEAN FUNCTIONS"
.IX Subsection "BOOLEAN FUNCTIONS"
.IP \(bu 4
\&\f(CWboolean()\fR
.IP \(bu 4
\&\f(CWnot()\fR
.IP \(bu 4
\&\f(CWtrue()\fR
.IP \(bu 4
\&\f(CWfalse()\fR
.IP \(bu 4
\&\f(CWlang()\fR
.SS "NUMBER FUNCTIONS"
.IX Subsection "NUMBER FUNCTIONS"
.IP \(bu 4
\&\f(CWnumber()\fR
.IP \(bu 4
\&\f(CWsum()\fR
.IP \(bu 4
\&\f(CWfloor()\fR
.IP \(bu 4
\&\f(CWceiling()\fR
.IP \(bu 4
\&\f(CWround()\fR
