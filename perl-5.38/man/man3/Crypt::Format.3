.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Crypt::Format 3"
.TH Crypt::Format 3 2021-11-17 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Crypt::Format \- Conversion utilities for encryption applications
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Crypt::Format;
\&
\&    my $der = Crypt::Format::pem2der($pem);
\&    my $pem = Crypt::Format::der2pem($der, \*(AqCERTIFICATE REQUEST\*(Aq);
\&
\&    my $good_pem = Crypt::Format::normalize_pem($weird_pem);
\&
\&    # Split PEM chains such as application/pem\-certificate\-chain …
\&    my @pems = Crypt::Format::split_pem_chain($pem_chain);
\&
\&    {
\&        #If, for whatever reason, you don’t like MIME::Base64,
\&        #then customize this. The module must have encode() and/or decode()
\&        #functions, depending on which of this module’s functions you use.
\&        #
\&        local $Crypt::Format::BASE64_MODULE = \*(Aq..\*(Aq;
\&
\&        Crypt::Format::...
\&    }
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Not much more to say! This module is for simple conversions that I got
tired of writing out.
.SH AUTHOR
.IX Header "AUTHOR"
Felipe Gasper (FELIPE)
.SH REPOSITORY
.IX Header "REPOSITORY"
https://github.com/FGasper/p5\-Crypt\-Format
.SH COPYRIGHT
.IX Header "COPYRIGHT"
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
LICENSE file included with this module.
