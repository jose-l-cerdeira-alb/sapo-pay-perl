.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dancer::Serializer::YAML 3"
.TH Dancer::Serializer::YAML 3 2023-02-08 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Dancer::Serializer::YAML \- serializer for handling YAML data
.SH VERSION
.IX Header "VERSION"
version 1.3521
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This class is an interface between Dancer's serializer engine abstraction layer
and the YAML (or YAML::XS) module.
.PP
In order to use this engine, use the template setting:
.PP
.Vb 1
\&    serializer: YAML
.Ve
.PP
This can be done in your config.yml file or directly in your app code with the
\&\fBset\fR keyword. This serializer will also be used when the serializer is set
to \fBmutable\fR and the correct Accept headers are supplied.
.PP
By default, the module YAML will be used to serialize/deserialize data and
the application configuration files. This can be changed via the
configuration:
.PP
.Vb 3
\&    engines:
\&        YAML:
\&            module: YAML::XS
.Ve
.PP
Note that if you want all configuration files to be read using \f(CW\*(C`YAML::XS\*(C'\fR, 
that configuration has to be set via application code:
.PP
.Vb 1
\&   config\->{engines}{YAML}{module} = \*(AqYAML::XS\*(Aq;
.Ve
.SH METHODS
.IX Header "METHODS"
.SS serialize
.IX Subsection "serialize"
Serialize a data structure to a YAML structure.
.SS deserialize
.IX Subsection "deserialize"
Deserialize a YAML structure to a data structure
.SS content_type
.IX Subsection "content_type"
Return 'text/x\-yaml'
.SH AUTHOR
.IX Header "AUTHOR"
Dancer Core Developers
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2010 by Alexis Sukrieh.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
