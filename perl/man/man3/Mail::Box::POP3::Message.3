.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mail::Box::POP3::Message 3"
.TH Mail::Box::POP3::Message 3 "2014-08-24" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::Box::POP3::Message \- one message on a POP3 server
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 5
\& Mail::Box::POP3::Message
\&   is a Mail::Box::Net::Message
\&   is a Mail::Box::Message
\&   is a Mail::Message
\&   is a Mail::Reporter
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& my $folder = new Mail::Box::POP3 ...
\& my $message = $folder\->message(10);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A \f(CW\*(C`Mail::Box::POP3::Message\*(C'\fR represents one message on a \s-1POP3\s0 server,
maintained by a Mail::Box::POP3 folder. Each message is stored as
separate entity on the server, and maybe temporarily in your program
as well.
.PP
Extends \*(L"\s-1DESCRIPTION\s0\*(R" in Mail::Box::Net::Message.
.SH "METHODS"
.IX Header "METHODS"
Extends \*(L"\s-1METHODS\s0\*(R" in Mail::Box::Net::Message.
.SS "Constructors"
.IX Subsection "Constructors"
Extends \*(L"Constructors\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fBclone\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBclone\fR(%options)" 4
.IX Item "$obj->clone(%options)"
Inherited, see \*(L"Constructors\*(R" in Mail::Message
.IP "Mail::Box::POP3::Message\->\fBnew\fR(%options)" 4
.IX Item "Mail::Box::POP3::Message->new(%options)"
.Vb 10
\& \-Option    \-\-Defined in             \-\-Default
\&  body        Mail::Message            undef
\&  body_type   Mail::Box::Message       Mail::Message::Body::Lines
\&  deleted     Mail::Message            <false>
\&  field_type  Mail::Message            undef
\&  folder      Mail::Box::Message       <required>
\&  head        Mail::Message            undef
\&  head_type   Mail::Message            Mail::Message::Head::Complete
\&  labels      Mail::Message            {}
\&  log         Mail::Reporter           \*(AqWARNINGS\*(Aq
\&  messageId   Mail::Message            undef
\&  modified    Mail::Message            <false>
\&  size        Mail::Box::Message       undef
\&  trace       Mail::Reporter           \*(AqWARNINGS\*(Aq
\&  trusted     Mail::Message            <false>
\&  unique      Mail::Box::Net::Message  <unique string>
.Ve
.RS 4
.IP "body => \s-1OBJECT\s0" 2
.IX Item "body => OBJECT"
.PD 0
.IP "body_type => CODE|CLASS" 2
.IX Item "body_type => CODE|CLASS"
.IP "deleted => \s-1BOOLEAN\s0" 2
.IX Item "deleted => BOOLEAN"
.IP "field_type => \s-1CLASS\s0" 2
.IX Item "field_type => CLASS"
.IP "folder => \s-1FOLDER\s0" 2
.IX Item "folder => FOLDER"
.IP "head => \s-1OBJECT\s0" 2
.IX Item "head => OBJECT"
.IP "head_type => \s-1CLASS\s0" 2
.IX Item "head_type => CLASS"
.IP "labels => ARRAY|HASH" 2
.IX Item "labels => ARRAY|HASH"
.IP "log => \s-1LEVEL\s0" 2
.IX Item "log => LEVEL"
.IP "messageId => \s-1STRING\s0" 2
.IX Item "messageId => STRING"
.IP "modified => \s-1BOOLEAN\s0" 2
.IX Item "modified => BOOLEAN"
.IP "size => \s-1INTEGER\s0" 2
.IX Item "size => INTEGER"
.IP "trace => \s-1LEVEL\s0" 2
.IX Item "trace => LEVEL"
.IP "trusted => \s-1BOOLEAN\s0" 2
.IX Item "trusted => BOOLEAN"
.IP "unique => \s-1STRING\s0" 2
.IX Item "unique => STRING"
.RE
.RS 4
.RE
.PD
.SS "Constructing a message"
.IX Subsection "Constructing a message"
Extends \*(L"Constructing a message\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fBbounce\fR( [<$rg_object|%options>] )" 4
.el .IP "\f(CW$obj\fR\->\fBbounce\fR( [<$rg_object|%options>] )" 4
.IX Item "$obj->bounce( [<$rg_object|%options>] )"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Bounce
.ie n .IP "Mail::Box::POP3::Message\->\fBbuild\fR( [$message|$part|$body], $content )" 4
.el .IP "Mail::Box::POP3::Message\->\fBbuild\fR( [$message|$part|$body], \f(CW$content\fR )" 4
.IX Item "Mail::Box::POP3::Message->build( [$message|$part|$body], $content )"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Build
.ie n .IP "Mail::Box::POP3::Message\->\fBbuildFromBody\fR($body, [$head], $headers)" 4
.el .IP "Mail::Box::POP3::Message\->\fBbuildFromBody\fR($body, [$head], \f(CW$headers\fR)" 4
.IX Item "Mail::Box::POP3::Message->buildFromBody($body, [$head], $headers)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Build
.ie n .IP "$obj\->\fBforward\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBforward\fR(%options)" 4
.IX Item "$obj->forward(%options)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Forward
.ie n .IP "$obj\->\fBforwardAttach\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBforwardAttach\fR(%options)" 4
.IX Item "$obj->forwardAttach(%options)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Forward
.ie n .IP "$obj\->\fBforwardEncapsulate\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBforwardEncapsulate\fR(%options)" 4
.IX Item "$obj->forwardEncapsulate(%options)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Forward
.ie n .IP "$obj\->\fBforwardInline\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBforwardInline\fR(%options)" 4
.IX Item "$obj->forwardInline(%options)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Forward
.ie n .IP "$obj\->\fBforwardNo\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBforwardNo\fR(%options)" 4
.IX Item "$obj->forwardNo(%options)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Forward
.ie n .IP "$obj\->\fBforwardPostlude\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBforwardPostlude\fR()" 4
.IX Item "$obj->forwardPostlude()"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Forward
.ie n .IP "$obj\->\fBforwardPrelude\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBforwardPrelude\fR()" 4
.IX Item "$obj->forwardPrelude()"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Forward
.ie n .IP "$obj\->\fBforwardSubject\fR(\s-1STRING\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBforwardSubject\fR(\s-1STRING\s0)" 4
.IX Item "$obj->forwardSubject(STRING)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Forward
.ie n .IP "Mail::Box::POP3::Message\->\fBread\fR($fh|STRING|SCALAR|ARRAY, %options)" 4
.el .IP "Mail::Box::POP3::Message\->\fBread\fR($fh|STRING|SCALAR|ARRAY, \f(CW%options\fR)" 4
.IX Item "Mail::Box::POP3::Message->read($fh|STRING|SCALAR|ARRAY, %options)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Read
.ie n .IP "$obj\->\fBrebuild\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBrebuild\fR(%options)" 4
.IX Item "$obj->rebuild(%options)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Rebuild
.ie n .IP "$obj\->\fBreply\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBreply\fR(%options)" 4
.IX Item "$obj->reply(%options)"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Reply
.ie n .IP "$obj\->\fBreplyPrelude\fR( [STRING|$field|$address|ARRAY\-$of\-$things] )" 4
.el .IP "\f(CW$obj\fR\->\fBreplyPrelude\fR( [STRING|$field|$address|ARRAY\-$of\-$things] )" 4
.IX Item "$obj->replyPrelude( [STRING|$field|$address|ARRAY-$of-$things] )"
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Reply
.ie n .IP "$obj\->\fBreplySubject\fR(\s-1STRING\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBreplySubject\fR(\s-1STRING\s0)" 4
.IX Item "$obj->replySubject(STRING)"
.PD 0
.IP "Mail::Box::POP3::Message\->\fBreplySubject\fR(\s-1STRING\s0)" 4
.IX Item "Mail::Box::POP3::Message->replySubject(STRING)"
.PD
Inherited, see \*(L"Constructing a message\*(R" in Mail::Message::Construct::Reply
.SS "The message"
.IX Subsection "The message"
Extends \*(L"The message\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fBcontainer\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBcontainer\fR()" 4
.IX Item "$obj->container()"
Inherited, see \*(L"The message\*(R" in Mail::Message
.ie n .IP "$obj\->\fBcopyTo\fR($folder, %options)" 4
.el .IP "\f(CW$obj\fR\->\fBcopyTo\fR($folder, \f(CW%options\fR)" 4
.IX Item "$obj->copyTo($folder, %options)"
Inherited, see \*(L"The message\*(R" in Mail::Box::Message
.ie n .IP "$obj\->\fBfolder\fR( [$folder] )" 4
.el .IP "\f(CW$obj\fR\->\fBfolder\fR( [$folder] )" 4
.IX Item "$obj->folder( [$folder] )"
Inherited, see \*(L"The message\*(R" in Mail::Box::Message
.ie n .IP "$obj\->\fBisDummy\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisDummy\fR()" 4
.IX Item "$obj->isDummy()"
Inherited, see \*(L"The message\*(R" in Mail::Message
.ie n .IP "$obj\->\fBisPart\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisPart\fR()" 4
.IX Item "$obj->isPart()"
Inherited, see \*(L"The message\*(R" in Mail::Message
.ie n .IP "$obj\->\fBmessageId\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBmessageId\fR()" 4
.IX Item "$obj->messageId()"
Inherited, see \*(L"The message\*(R" in Mail::Message
.ie n .IP "$obj\->\fBmoveTo\fR($folder, %options)" 4
.el .IP "\f(CW$obj\fR\->\fBmoveTo\fR($folder, \f(CW%options\fR)" 4
.IX Item "$obj->moveTo($folder, %options)"
Inherited, see \*(L"The message\*(R" in Mail::Box::Message
.ie n .IP "$obj\->\fBpartNumber\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBpartNumber\fR()" 4
.IX Item "$obj->partNumber()"
Inherited, see \*(L"The message\*(R" in Mail::Message
.ie n .IP "$obj\->\fBprint\fR( [$fh] )" 4
.el .IP "\f(CW$obj\fR\->\fBprint\fR( [$fh] )" 4
.IX Item "$obj->print( [$fh] )"
Inherited, see \*(L"The message\*(R" in Mail::Message
.ie n .IP "$obj\->\fBsend\fR( [$mailer], %options )" 4
.el .IP "\f(CW$obj\fR\->\fBsend\fR( [$mailer], \f(CW%options\fR )" 4
.IX Item "$obj->send( [$mailer], %options )"
Inherited, see \*(L"The message\*(R" in Mail::Message
.ie n .IP "$obj\->\fBseqnr\fR( [$integer] )" 4
.el .IP "\f(CW$obj\fR\->\fBseqnr\fR( [$integer] )" 4
.IX Item "$obj->seqnr( [$integer] )"
Inherited, see \*(L"The message\*(R" in Mail::Box::Message
.ie n .IP "$obj\->\fBsize\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBsize\fR()" 4
.IX Item "$obj->size()"
Returns the size of this message.  If the message is still on the remote
server, \s-1POP\s0 is used to ask for the size.  When the message is already loaded
onto the local system, the size of the parsed message is taken.  These
sizes can differ because the difference in line-ending representation.
.ie n .IP "$obj\->\fBtoplevel\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBtoplevel\fR()" 4
.IX Item "$obj->toplevel()"
Inherited, see \*(L"The message\*(R" in Mail::Message
.ie n .IP "$obj\->\fBunique\fR( [STRING|undef] )" 4
.el .IP "\f(CW$obj\fR\->\fBunique\fR( [STRING|undef] )" 4
.IX Item "$obj->unique( [STRING|undef] )"
Inherited, see \*(L"The message\*(R" in Mail::Box::Net::Message
.ie n .IP "$obj\->\fBwrite\fR( [$fh] )" 4
.el .IP "\f(CW$obj\fR\->\fBwrite\fR( [$fh] )" 4
.IX Item "$obj->write( [$fh] )"
Inherited, see \*(L"The message\*(R" in Mail::Message
.SS "The header"
.IX Subsection "The header"
Extends \*(L"The header\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fBbcc\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBbcc\fR()" 4
.IX Item "$obj->bcc()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBcc\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBcc\fR()" 4
.IX Item "$obj->cc()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBdate\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBdate\fR()" 4
.IX Item "$obj->date()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBdestinations\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBdestinations\fR()" 4
.IX Item "$obj->destinations()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBfrom\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBfrom\fR()" 4
.IX Item "$obj->from()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBget\fR($fieldname)" 4
.el .IP "\f(CW$obj\fR\->\fBget\fR($fieldname)" 4
.IX Item "$obj->get($fieldname)"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBguessTimestamp\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBguessTimestamp\fR()" 4
.IX Item "$obj->guessTimestamp()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBhead\fR( [$head] )" 4
.el .IP "\f(CW$obj\fR\->\fBhead\fR( [$head] )" 4
.IX Item "$obj->head( [$head] )"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBnrLines\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBnrLines\fR()" 4
.IX Item "$obj->nrLines()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBsender\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBsender\fR()" 4
.IX Item "$obj->sender()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBstudy\fR($fieldname)" 4
.el .IP "\f(CW$obj\fR\->\fBstudy\fR($fieldname)" 4
.IX Item "$obj->study($fieldname)"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBsubject\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBsubject\fR()" 4
.IX Item "$obj->subject()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBtimestamp\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBtimestamp\fR()" 4
.IX Item "$obj->timestamp()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.ie n .IP "$obj\->\fBto\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBto\fR()" 4
.IX Item "$obj->to()"
Inherited, see \*(L"The header\*(R" in Mail::Message
.SS "The body"
.IX Subsection "The body"
Extends \*(L"The body\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fBbody\fR( [$body] )" 4
.el .IP "\f(CW$obj\fR\->\fBbody\fR( [$body] )" 4
.IX Item "$obj->body( [$body] )"
Inherited, see \*(L"The body\*(R" in Mail::Message
.ie n .IP "$obj\->\fBcontentType\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBcontentType\fR()" 4
.IX Item "$obj->contentType()"
Inherited, see \*(L"The body\*(R" in Mail::Message
.ie n .IP "$obj\->\fBdecoded\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBdecoded\fR(%options)" 4
.IX Item "$obj->decoded(%options)"
Inherited, see \*(L"The body\*(R" in Mail::Message
.ie n .IP "$obj\->\fBencode\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBencode\fR(%options)" 4
.IX Item "$obj->encode(%options)"
Inherited, see \*(L"The body\*(R" in Mail::Message
.ie n .IP "$obj\->\fBisMultipart\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisMultipart\fR()" 4
.IX Item "$obj->isMultipart()"
Inherited, see \*(L"The body\*(R" in Mail::Message
.ie n .IP "$obj\->\fBisNested\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisNested\fR()" 4
.IX Item "$obj->isNested()"
Inherited, see \*(L"The body\*(R" in Mail::Message
.ie n .IP "$obj\->\fBparts\fR( [<'\s-1ALL\s0'|'\s-1ACTIVE\s0'|'\s-1DELETED\s0'|'\s-1RECURSE\s0'|$filter>] )" 4
.el .IP "\f(CW$obj\fR\->\fBparts\fR( [<'\s-1ALL\s0'|'\s-1ACTIVE\s0'|'\s-1DELETED\s0'|'\s-1RECURSE\s0'|$filter>] )" 4
.IX Item "$obj->parts( [<'ALL'|'ACTIVE'|'DELETED'|'RECURSE'|$filter>] )"
Inherited, see \*(L"The body\*(R" in Mail::Message
.SS "Flags"
.IX Subsection "Flags"
Extends \*(L"Flags\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fBdelete\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBdelete\fR()" 4
.IX Item "$obj->delete()"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.ie n .IP "$obj\->\fBdeleted\fR( [\s-1BOOLEAN\s0] )" 4
.el .IP "\f(CW$obj\fR\->\fBdeleted\fR( [\s-1BOOLEAN\s0] )" 4
.IX Item "$obj->deleted( [BOOLEAN] )"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.ie n .IP "$obj\->\fBisDeleted\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisDeleted\fR()" 4
.IX Item "$obj->isDeleted()"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.ie n .IP "$obj\->\fBisModified\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisModified\fR()" 4
.IX Item "$obj->isModified()"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.ie n .IP "$obj\->\fBlabel\fR($label|PAIRS)" 4
.el .IP "\f(CW$obj\fR\->\fBlabel\fR($label|PAIRS)" 4
.IX Item "$obj->label($label|PAIRS)"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.ie n .IP "$obj\->\fBlabels\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlabels\fR()" 4
.IX Item "$obj->labels()"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.ie n .IP "$obj\->\fBlabelsToStatus\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlabelsToStatus\fR()" 4
.IX Item "$obj->labelsToStatus()"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.ie n .IP "$obj\->\fBmodified\fR( [\s-1BOOLEAN\s0] )" 4
.el .IP "\f(CW$obj\fR\->\fBmodified\fR( [\s-1BOOLEAN\s0] )" 4
.IX Item "$obj->modified( [BOOLEAN] )"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.ie n .IP "$obj\->\fBstatusToLabels\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBstatusToLabels\fR()" 4
.IX Item "$obj->statusToLabels()"
Inherited, see \*(L"Flags\*(R" in Mail::Message
.SS "The whole message as text"
.IX Subsection "The whole message as text"
Extends \*(L"The whole message as text\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fBfile\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBfile\fR()" 4
.IX Item "$obj->file()"
Inherited, see \*(L"The whole message as text\*(R" in Mail::Message::Construct::Text
.ie n .IP "$obj\->\fBlines\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlines\fR()" 4
.IX Item "$obj->lines()"
Inherited, see \*(L"The whole message as text\*(R" in Mail::Message::Construct::Text
.ie n .IP "$obj\->\fBprintStructure\fR( [$fh|undef],[$indent] )" 4
.el .IP "\f(CW$obj\fR\->\fBprintStructure\fR( [$fh|undef],[$indent] )" 4
.IX Item "$obj->printStructure( [$fh|undef],[$indent] )"
Inherited, see \*(L"The whole message as text\*(R" in Mail::Message::Construct::Text
.ie n .IP "$obj\->\fBstring\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBstring\fR()" 4
.IX Item "$obj->string()"
Inherited, see \*(L"The whole message as text\*(R" in Mail::Message::Construct::Text
.SS "Internals"
.IX Subsection "Internals"
Extends \*(L"Internals\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fBclonedFrom\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBclonedFrom\fR()" 4
.IX Item "$obj->clonedFrom()"
Inherited, see \*(L"Internals\*(R" in Mail::Message
.ie n .IP "Mail::Box::POP3::Message\->\fBcoerce\fR($message, %options)" 4
.el .IP "Mail::Box::POP3::Message\->\fBcoerce\fR($message, \f(CW%options\fR)" 4
.IX Item "Mail::Box::POP3::Message->coerce($message, %options)"
Inherited, see \*(L"Internals\*(R" in Mail::Message
.ie n .IP "$obj\->\fBdiskDelete\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBdiskDelete\fR()" 4
.IX Item "$obj->diskDelete()"
Inherited, see \*(L"Internals\*(R" in Mail::Box::Message
.ie n .IP "$obj\->\fBisDelayed\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisDelayed\fR()" 4
.IX Item "$obj->isDelayed()"
Inherited, see \*(L"Internals\*(R" in Mail::Message
.ie n .IP "$obj\->\fBloadBody\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBloadBody\fR()" 4
.IX Item "$obj->loadBody()"
Inherited, see \*(L"Internals\*(R" in Mail::Box::Net::Message
.ie n .IP "$obj\->\fBreadBody\fR( $parser, $head, [$bodytype] )" 4
.el .IP "\f(CW$obj\fR\->\fBreadBody\fR( \f(CW$parser\fR, \f(CW$head\fR, [$bodytype] )" 4
.IX Item "$obj->readBody( $parser, $head, [$bodytype] )"
Inherited, see \*(L"Internals\*(R" in Mail::Box::Message
.ie n .IP "$obj\->\fBreadFromParser\fR( $parser, [$bodytype] )" 4
.el .IP "\f(CW$obj\fR\->\fBreadFromParser\fR( \f(CW$parser\fR, [$bodytype] )" 4
.IX Item "$obj->readFromParser( $parser, [$bodytype] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message
.ie n .IP "$obj\->\fBreadHead\fR( $parser, [$class] )" 4
.el .IP "\f(CW$obj\fR\->\fBreadHead\fR( \f(CW$parser\fR, [$class] )" 4
.IX Item "$obj->readHead( $parser, [$class] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message
.ie n .IP "$obj\->\fBrecursiveRebuildPart\fR($part, %options)" 4
.el .IP "\f(CW$obj\fR\->\fBrecursiveRebuildPart\fR($part, \f(CW%options\fR)" 4
.IX Item "$obj->recursiveRebuildPart($part, %options)"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Construct::Rebuild
.ie n .IP "$obj\->\fBstoreBody\fR($body)" 4
.el .IP "\f(CW$obj\fR\->\fBstoreBody\fR($body)" 4
.IX Item "$obj->storeBody($body)"
Inherited, see \*(L"Internals\*(R" in Mail::Message
.ie n .IP "$obj\->\fBtakeMessageId\fR( [\s-1STRING\s0] )" 4
.el .IP "\f(CW$obj\fR\->\fBtakeMessageId\fR( [\s-1STRING\s0] )" 4
.IX Item "$obj->takeMessageId( [STRING] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message
.SS "Error handling"
.IX Subsection "Error handling"
Extends \*(L"Error handling\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fB\s-1AUTOLOAD\s0\fR()" 4
.el .IP "\f(CW$obj\fR\->\fB\s-1AUTOLOAD\s0\fR()" 4
.IX Item "$obj->AUTOLOAD()"
Inherited, see \*(L"\s-1METHODS\s0\*(R" in Mail::Message::Construct
.ie n .IP "$obj\->\fBaddReport\fR($object)" 4
.el .IP "\f(CW$obj\fR\->\fBaddReport\fR($object)" 4
.IX Item "$obj->addReport($object)"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "\f(CW$obj\fR\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "$obj->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD 0
.ie n .IP "Mail::Box::POP3::Message\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "Mail::Box::POP3::Message\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "Mail::Box::POP3::Message->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBerrors\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBerrors\fR()" 4
.IX Item "$obj->errors()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlog\fR( [$level, [$strings]] )" 4
.el .IP "\f(CW$obj\fR\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "$obj->log( [$level, [$strings]] )"
.PD 0
.IP "Mail::Box::POP3::Message\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "Mail::Box::POP3::Message->log( [$level, [$strings]] )"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlogPriority\fR($level)" 4
.el .IP "\f(CW$obj\fR\->\fBlogPriority\fR($level)" 4
.IX Item "$obj->logPriority($level)"
.PD 0
.IP "Mail::Box::POP3::Message\->\fBlogPriority\fR($level)" 4
.IX Item "Mail::Box::POP3::Message->logPriority($level)"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlogSettings\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlogSettings\fR()" 4
.IX Item "$obj->logSettings()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBnotImplemented\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBnotImplemented\fR()" 4
.IX Item "$obj->notImplemented()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBreport\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreport\fR( [$level] )" 4
.IX Item "$obj->report( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBreportAll\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreportAll\fR( [$level] )" 4
.IX Item "$obj->reportAll( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBshortSize\fR( [$value] )" 4
.el .IP "\f(CW$obj\fR\->\fBshortSize\fR( [$value] )" 4
.IX Item "$obj->shortSize( [$value] )"
.PD 0
.IP "Mail::Box::POP3::Message\->\fBshortSize\fR( [$value] )" 4
.IX Item "Mail::Box::POP3::Message->shortSize( [$value] )"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Message
.ie n .IP "$obj\->\fBshortString\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBshortString\fR()" 4
.IX Item "$obj->shortString()"
Inherited, see \*(L"Error handling\*(R" in Mail::Message
.ie n .IP "$obj\->\fBtrace\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBtrace\fR( [$level] )" 4
.IX Item "$obj->trace( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBwarnings\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBwarnings\fR()" 4
.IX Item "$obj->warnings()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.SS "Cleanup"
.IX Subsection "Cleanup"
Extends \*(L"Cleanup\*(R" in Mail::Box::Net::Message.
.ie n .IP "$obj\->\fB\s-1DESTROY\s0\fR()" 4
.el .IP "\f(CW$obj\fR\->\fB\s-1DESTROY\s0\fR()" 4
.IX Item "$obj->DESTROY()"
Inherited, see \*(L"Cleanup\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBdestruct\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBdestruct\fR()" 4
.IX Item "$obj->destruct()"
Inherited, see \*(L"Cleanup\*(R" in Mail::Box::Message
.SH "DETAILS"
.IX Header "DETAILS"
Extends \*(L"\s-1DETAILS\s0\*(R" in Mail::Box::Net::Message.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .IP "Error: Cannot coerce a $class object into a $class object" 4
.el .IP "Error: Cannot coerce a \f(CW$class\fR object into a \f(CW$class\fR object" 4
.IX Item "Error: Cannot coerce a $class object into a $class object"
.PD 0
.ie n .IP "Error: Cannot include forward source as $include." 4
.el .IP "Error: Cannot include forward source as \f(CW$include\fR." 4
.IX Item "Error: Cannot include forward source as $include."
.PD
Unknown alternative for the forward(include).  Valid choices are
\&\f(CW\*(C`NO\*(C'\fR, \f(CW\*(C`INLINE\*(C'\fR, \f(CW\*(C`ATTACH\*(C'\fR, and \f(CW\*(C`ENCAPSULATE\*(C'\fR.
.ie n .IP "Error: Cannot include reply source as $include." 4
.el .IP "Error: Cannot include reply source as \f(CW$include\fR." 4
.IX Item "Error: Cannot include reply source as $include."
Unknown alternative for the \f(CW\*(C`include\*(C'\fR option of \fIreply()\fR.  Valid
choices are \f(CW\*(C`NO\*(C'\fR, \f(CW\*(C`INLINE\*(C'\fR, and \f(CW\*(C`ATTACH\*(C'\fR.
.IP "Error: Method bounce requires To, Cc, or Bcc" 4
.IX Item "Error: Method bounce requires To, Cc, or Bcc"
The message \fIbounce()\fR method forwards a received message off to someone
else without modification; you must specified it's new destination.
If you have the urge not to specify any destination, you probably
are looking for \fIreply()\fR. When you wish to modify the content, use
\&\fIforward()\fR.
.IP "Error: Method forwardAttach requires a preamble" 4
.IX Item "Error: Method forwardAttach requires a preamble"
.PD 0
.IP "Error: Method forwardEncapsulate requires a preamble" 4
.IX Item "Error: Method forwardEncapsulate requires a preamble"
.IP "Error: No address to create forwarded to." 4
.IX Item "Error: No address to create forwarded to."
.PD
If a forward message is created, a destination address must be specified.
.IP "Error: No default mailer found to send message." 4
.IX Item "Error: No default mailer found to send message."
The message \fIsend()\fR mechanism had not enough information to automatically
find a mail transfer agent to sent this message.  Specify a mailer
explicitly using the \f(CW\*(C`via\*(C'\fR options.
.ie n .IP "Error: No rebuild rule $name defined." 4
.el .IP "Error: No rebuild rule \f(CW$name\fR defined." 4
.IX Item "Error: No rebuild rule $name defined."
.PD 0
.IP "Error: Only \fIbuild()\fR Mail::Message's; they are not in a folder yet" 4
.IX Item "Error: Only build() Mail::Message's; they are not in a folder yet"
.PD
You may wish to construct a message to be stored in a some kind
of folder, but you need to do that in two steps.  First, create a
normal Mail::Message, and then add it to the folder.  During this
\&\fIMail::Box::addMessage()\fR process, the message will get \fIcoerce()\fR\-d
into the right message type, adding storage information and the like.
.ie n .IP "Error: Package $package does not implement $method." 4
.el .IP "Error: Package \f(CW$package\fR does not implement \f(CW$method\fR." 4
.IX Item "Error: Package $package does not implement $method."
Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.
.IP "Error: Unable to read delayed body." 4
.IX Item "Error: Unable to read delayed body."
.PD 0
.IP "Error: Unable to read delayed head." 4
.IX Item "Error: Unable to read delayed head."
.IP "Error: coercion starts with some object" 4
.IX Item "Error: coercion starts with some object"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Mail-Box distribution version 2.117,
built on August 24, 2014. Website: \fIhttp://perl.overmeer.net/mailbox/\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2001\-2014 by [Mark Overmeer]. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://www.perl.com/perl/misc/Artistic.html\fR
