.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "AnyEvent::HTTP::Message 3"
.TH AnyEvent::HTTP::Message 3 "2013-06-13" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
AnyEvent::HTTP::Message \- Lightweight objects for AnyEvent::HTTP Request/Response
.SH "VERSION"
.IX Header "VERSION"
version 0.302
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  # don\*(Aqt use this directly
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a base class for:
.IP "\(bu" 4
AnyEvent::HTTP::Request
.IP "\(bu" 4
AnyEvent::HTTP::Response
.SH "CLASS METHODS"
.IX Header "CLASS METHODS"
.SS "new"
.IX Subsection "new"
The constructor accepts either:
.IP "\(bu" 4
a single hashref of named arguments
.IP "\(bu" 4
an instance of an appropriate subclass of HTTP::Message (with an optional hashref of additional parameters)
.IP "\(bu" 4
or a specialized list of arguments that will be passed to \*(L"parse_args\*(R" (which must be defined by the subclass).
.SS "parse_args"
.IX Subsection "parse_args"
Called by the constructor
when \*(L"new\*(R" is called with
a list of arguments.
.PP
Must be customized by subclasses.
.SS "from_http_message"
.IX Subsection "from_http_message"
Called by the constructor
when \*(L"new\*(R" is called with
an instance of a HTTP::Message subclass.
.PP
Must be customized by subclasses.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "body"
.IX Subsection "body"
Message content body
.SS "content"
.IX Subsection "content"
Alias for \*(L"body\*(R"
.SS "headers"
.IX Subsection "headers"
Message headers (hashref)
.SH "METHODS"
.IX Header "METHODS"
.SS "header"
.IX Subsection "header"
.Vb 2
\&  my $ua  = $message\->header(\*(AqUser\-Agent\*(Aq);
\&  # same as $message\->header\->{\*(Aquser\-agent\*(Aq};
.Ve
.PP
Takes the specified key,
converts underscores to dashes and lower-cases it,
then returns the value of that message header.
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Perldoc"
.IX Subsection "Perldoc"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&  perldoc AnyEvent::HTTP::Message
.Ve
.SS "Websites"
.IX Subsection "Websites"
The following websites have more information about this module, and may be of help to you. As always,
in addition to those websites please use your favorite search engine to discover more resources.
.IP "\(bu" 4
MetaCPAN
.Sp
A modern, open-source \s-1CPAN\s0 search engine, useful to view \s-1POD\s0 in \s-1HTML\s0 format.
.Sp
<http://metacpan.org/release/AnyEvent\-HTTP\-Message>
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests by email to \f(CW\*(C`bug\-anyevent\-http\-message at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=AnyEvent\-HTTP\-Message>. You will be automatically notified of any
progress on the request by the system.
.SS "Source Code"
.IX Subsection "Source Code"
<https://github.com/rwstauner/AnyEvent\-HTTP\-Message>
.PP
.Vb 1
\&  git clone https://github.com/rwstauner/AnyEvent\-HTTP\-Message.git
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Randy Stauner <rwstauner@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Randy Stauner.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
