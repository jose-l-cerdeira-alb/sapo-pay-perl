.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::Message::Field::AuthResults 3"
.TH Mail::Message::Field::AuthResults 3 "2020-02-07" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::Message::Field::AuthResults \- message header field authentication result
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 5
\& Mail::Message::Field::AuthResults
\&   is a Mail::Message::Field::Structured
\&   is a Mail::Message::Field::Full
\&   is a Mail::Message::Field
\&   is a Mail::Reporter
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& my $f = Mail::Message::Field\->new(\*(AqAuthentication\-Results\*(Aq => \*(Aq...\*(Aq);
\&
\& my $g = Mail::Message::Field\->new(\*(AqAuthentication\-Results\*(Aq);
\& $g\->addResult(method => \*(Aqdkim\*(Aq, result => \*(Aqfail\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mail Transfer Agents may check the authenticity of an incoming message.
They add 'Authentication\-Results' headers, maybe more than one.  This
implementation is based on \s-1RFC7601.\s0
.PP
Extends \*(L"\s-1DESCRIPTION\*(R"\s0 in Mail::Message::Field::Structured.
.SH "OVERLOADED"
.IX Header "OVERLOADED"
Extends \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Field::Structured.
.ie n .IP "overload: \fB""""\fR" 4
.el .IP "overload: \fB``''\fR" 4
.IX Item "overload: """""
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Field
.IP "overload: \fB0+\fR" 4
.IX Item "overload: 0+"
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Field
.IP "overload: \fB<=\fR>" 4
.IX Item "overload: <=>"
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Field
.IP "overload: \fBbool\fR" 4
.IX Item "overload: bool"
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Field
.IP "overload: \fBcmp\fR" 4
.IX Item "overload: cmp"
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Field
.IP "overload: \fBstringification\fR" 4
.IX Item "overload: stringification"
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Field::Full
.SH "METHODS"
.IX Header "METHODS"
Extends \*(L"\s-1METHODS\*(R"\s0 in Mail::Message::Field::Structured.
.SS "Constructors"
.IX Subsection "Constructors"
Extends \*(L"Constructors\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fBclone\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBclone\fR()" 4
.IX Item "$obj->clone()"
Inherited, see \*(L"Constructors\*(R" in Mail::Message::Field
.ie n .IP "Mail::Message::Field::AuthResults\->\fBfrom\fR($field, %options)" 4
.el .IP "Mail::Message::Field::AuthResults\->\fBfrom\fR($field, \f(CW%options\fR)" 4
.IX Item "Mail::Message::Field::AuthResults->from($field, %options)"
Inherited, see \*(L"Constructors\*(R" in Mail::Message::Field::Full
.IP "Mail::Message::Field::AuthResults\->\fBnew\fR($data)" 4
.IX Item "Mail::Message::Field::AuthResults->new($data)"
.Vb 12
\& \-Option    \-\-Defined in                      \-\-Default
\&  attributes  Mail::Message::Field::Structured  <ignored>
\&  charset     Mail::Message::Field::Full        undef
\&  datum       Mail::Message::Field::Structured  undef
\&  encoding    Mail::Message::Field::Full        \*(Aqq\*(Aq
\&  force       Mail::Message::Field::Full        false
\&  language    Mail::Message::Field::Full        undef
\&  log         Mail::Reporter                    \*(AqWARNINGS\*(Aq
\&  results                                       []
\&  server                                        <required>
\&  trace       Mail::Reporter                    \*(AqWARNINGS\*(Aq
\&  version                                       undef
.Ve
.RS 4
.IP "attributes => \s-1ATTRS\s0" 2
.IX Item "attributes => ATTRS"
.PD 0
.IP "charset => \s-1STRING\s0" 2
.IX Item "charset => STRING"
.IP "datum => \s-1STRING\s0" 2
.IX Item "datum => STRING"
.IP "encoding => 'q'|'Q'|'b'|'B'" 2
.IX Item "encoding => 'q'|'Q'|'b'|'B'"
.IP "force => \s-1BOOLEAN\s0" 2
.IX Item "force => BOOLEAN"
.IP "language => \s-1STRING\s0" 2
.IX Item "language => STRING"
.IP "log => \s-1LEVEL\s0" 2
.IX Item "log => LEVEL"
.IP "results => \s-1ARRAY\s0" 2
.IX Item "results => ARRAY"
.PD
Each authentication method is represented by a \s-1HASH,\s0 which contains
the 'method' and 'result' keys.  Sometimes, there is a 'comment'.
Properties of form 'ptype.pname' will be there as well.
.IP "server => \s-1DOMAIN\s0" 2
.IX Item "server => DOMAIN"
Where the authentication tool ran.  This should be your local service,
otherwise you may accept spoofed headers!
.IP "trace => \s-1LEVEL\s0" 2
.IX Item "trace => LEVEL"
.PD 0
.IP "version => \s-1INTEGER\s0" 2
.IX Item "version => INTEGER"
.RE
.RS 4
.RE
.PD
.SS "The field"
.IX Subsection "The field"
Extends \*(L"The field\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fBisStructured\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisStructured\fR()" 4
.IX Item "$obj->isStructured()"
.PD 0
.IP "Mail::Message::Field::AuthResults\->\fBisStructured\fR()" 4
.IX Item "Mail::Message::Field::AuthResults->isStructured()"
.PD
Inherited, see \*(L"The field\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBlength\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlength\fR()" 4
.IX Item "$obj->length()"
Inherited, see \*(L"The field\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBnrLines\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBnrLines\fR()" 4
.IX Item "$obj->nrLines()"
Inherited, see \*(L"The field\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBprint\fR( [$fh] )" 4
.el .IP "\f(CW$obj\fR\->\fBprint\fR( [$fh] )" 4
.IX Item "$obj->print( [$fh] )"
Inherited, see \*(L"The field\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBsize\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBsize\fR()" 4
.IX Item "$obj->size()"
Inherited, see \*(L"The field\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBstring\fR( [$wrap] )" 4
.el .IP "\f(CW$obj\fR\->\fBstring\fR( [$wrap] )" 4
.IX Item "$obj->string( [$wrap] )"
Inherited, see \*(L"The field\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBtoDisclose\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBtoDisclose\fR()" 4
.IX Item "$obj->toDisclose()"
Inherited, see \*(L"The field\*(R" in Mail::Message::Field
.SS "Access to the name"
.IX Subsection "Access to the name"
Extends \*(L"Access to the name\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fBName\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBName\fR()" 4
.IX Item "$obj->Name()"
Inherited, see \*(L"Access to the name\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBname\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBname\fR()" 4
.IX Item "$obj->name()"
Inherited, see \*(L"Access to the name\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBwellformedName\fR( [\s-1STRING\s0] )" 4
.el .IP "\f(CW$obj\fR\->\fBwellformedName\fR( [\s-1STRING\s0] )" 4
.IX Item "$obj->wellformedName( [STRING] )"
Inherited, see \*(L"Access to the name\*(R" in Mail::Message::Field
.SS "Access to the body"
.IX Subsection "Access to the body"
Extends \*(L"Access to the body\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fBbody\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBbody\fR()" 4
.IX Item "$obj->body()"
Inherited, see \*(L"Access to the body\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBdecodedBody\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBdecodedBody\fR(%options)" 4
.IX Item "$obj->decodedBody(%options)"
Inherited, see \*(L"Access to the body\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBfolded\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBfolded\fR()" 4
.IX Item "$obj->folded()"
Inherited, see \*(L"Access to the body\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBfoldedBody\fR( [$body] )" 4
.el .IP "\f(CW$obj\fR\->\fBfoldedBody\fR( [$body] )" 4
.IX Item "$obj->foldedBody( [$body] )"
Inherited, see \*(L"Access to the body\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBstripCFWS\fR( [\s-1STRING\s0] )" 4
.el .IP "\f(CW$obj\fR\->\fBstripCFWS\fR( [\s-1STRING\s0] )" 4
.IX Item "$obj->stripCFWS( [STRING] )"
.PD 0
.IP "Mail::Message::Field::AuthResults\->\fBstripCFWS\fR( [\s-1STRING\s0] )" 4
.IX Item "Mail::Message::Field::AuthResults->stripCFWS( [STRING] )"
.PD
Inherited, see \*(L"Access to the body\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBunfoldedBody\fR( [$body, [$wrap]] )" 4
.el .IP "\f(CW$obj\fR\->\fBunfoldedBody\fR( [$body, [$wrap]] )" 4
.IX Item "$obj->unfoldedBody( [$body, [$wrap]] )"
Inherited, see \*(L"Access to the body\*(R" in Mail::Message::Field
.SS "Access to the content"
.IX Subsection "Access to the content"
Extends \*(L"Access to the content\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fBaddAttribute\fR(...)" 4
.el .IP "\f(CW$obj\fR\->\fBaddAttribute\fR(...)" 4
.IX Item "$obj->addAttribute(...)"
Attributes are not supported here.
.ie n .IP "$obj\->\fBaddResult\fR(HASH|PAIRS)" 4
.el .IP "\f(CW$obj\fR\->\fBaddResult\fR(HASH|PAIRS)" 4
.IX Item "$obj->addResult(HASH|PAIRS)"
Add new results to this header.  Invalid results are ignored.
.ie n .IP "$obj\->\fBaddresses\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBaddresses\fR()" 4
.IX Item "$obj->addresses()"
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBattrPairs\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBattrPairs\fR()" 4
.IX Item "$obj->attrPairs()"
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field::Structured
.ie n .IP "$obj\->\fBattribute\fR( $object|<\s-1STRING,\s0 %options>|<$name,$value,%options> )" 4
.el .IP "\f(CW$obj\fR\->\fBattribute\fR( \f(CW$object\fR|<\s-1STRING,\s0 \f(CW%options\fR>|<$name,$value,%options> )" 4
.IX Item "$obj->attribute( $object|<STRING, %options>|<$name,$value,%options> )"
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field::Structured
.ie n .IP "$obj\->\fBattributes\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBattributes\fR()" 4
.IX Item "$obj->attributes()"
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field::Structured
.ie n .IP "$obj\->\fBbeautify\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBbeautify\fR()" 4
.IX Item "$obj->beautify()"
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBcomment\fR( [\s-1STRING\s0] )" 4
.el .IP "\f(CW$obj\fR\->\fBcomment\fR( [\s-1STRING\s0] )" 4
.IX Item "$obj->comment( [STRING] )"
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBcreateComment\fR(\s-1STRING,\s0 %options)" 4
.el .IP "\f(CW$obj\fR\->\fBcreateComment\fR(\s-1STRING,\s0 \f(CW%options\fR)" 4
.IX Item "$obj->createComment(STRING, %options)"
.PD 0
.ie n .IP "Mail::Message::Field::AuthResults\->\fBcreateComment\fR(\s-1STRING,\s0 %options)" 4
.el .IP "Mail::Message::Field::AuthResults\->\fBcreateComment\fR(\s-1STRING,\s0 \f(CW%options\fR)" 4
.IX Item "Mail::Message::Field::AuthResults->createComment(STRING, %options)"
.PD
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBcreatePhrase\fR(\s-1STRING,\s0 %options)" 4
.el .IP "\f(CW$obj\fR\->\fBcreatePhrase\fR(\s-1STRING,\s0 \f(CW%options\fR)" 4
.IX Item "$obj->createPhrase(STRING, %options)"
.PD 0
.ie n .IP "Mail::Message::Field::AuthResults\->\fBcreatePhrase\fR(\s-1STRING,\s0 %options)" 4
.el .IP "Mail::Message::Field::AuthResults\->\fBcreatePhrase\fR(\s-1STRING,\s0 \f(CW%options\fR)" 4
.IX Item "Mail::Message::Field::AuthResults->createPhrase(STRING, %options)"
.PD
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBresults\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBresults\fR()" 4
.IX Item "$obj->results()"
Returns a \s-1LIST\s0 of result HASHes.  Each \s-1HASH\s0 at least contains keys 'method',
\&'method_version', and 'result'.
.ie n .IP "$obj\->\fBserver\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBserver\fR()" 4
.IX Item "$obj->server()"
The hostname which ran this authentication tool.
.ie n .IP "$obj\->\fBstudy\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBstudy\fR()" 4
.IX Item "$obj->study()"
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBtoDate\fR( [$time] )" 4
.el .IP "\f(CW$obj\fR\->\fBtoDate\fR( [$time] )" 4
.IX Item "$obj->toDate( [$time] )"
.PD 0
.IP "Mail::Message::Field::AuthResults\->\fBtoDate\fR( [$time] )" 4
.IX Item "Mail::Message::Field::AuthResults->toDate( [$time] )"
.PD
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBtoInt\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBtoInt\fR()" 4
.IX Item "$obj->toInt()"
Inherited, see \*(L"Access to the content\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBversion\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBversion\fR()" 4
.IX Item "$obj->version()"
The version of the 'Authentication\-Results' header, which may be different
from '1' (default) for successors of \s-1RFC7601.\s0
.SS "Other methods"
.IX Subsection "Other methods"
Extends \*(L"Other methods\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fBdateToTimestamp\fR(\s-1STRING\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBdateToTimestamp\fR(\s-1STRING\s0)" 4
.IX Item "$obj->dateToTimestamp(STRING)"
.PD 0
.IP "Mail::Message::Field::AuthResults\->\fBdateToTimestamp\fR(\s-1STRING\s0)" 4
.IX Item "Mail::Message::Field::AuthResults->dateToTimestamp(STRING)"
.PD
Inherited, see \*(L"Other methods\*(R" in Mail::Message::Field
.SS "Internals"
.IX Subsection "Internals"
Extends \*(L"Internals\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fBconsume\fR( $line | <$name,<$body|$objects>> )" 4
.el .IP "\f(CW$obj\fR\->\fBconsume\fR( \f(CW$line\fR | <$name,<$body|$objects>> )" 4
.IX Item "$obj->consume( $line | <$name,<$body|$objects>> )"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBdecode\fR(\s-1STRING,\s0 %options)" 4
.el .IP "\f(CW$obj\fR\->\fBdecode\fR(\s-1STRING,\s0 \f(CW%options\fR)" 4
.IX Item "$obj->decode(STRING, %options)"
.PD 0
.ie n .IP "Mail::Message::Field::AuthResults\->\fBdecode\fR(\s-1STRING,\s0 %options)" 4
.el .IP "Mail::Message::Field::AuthResults\->\fBdecode\fR(\s-1STRING,\s0 \f(CW%options\fR)" 4
.IX Item "Mail::Message::Field::AuthResults->decode(STRING, %options)"
.PD
Inherited, see \*(L"Internals\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBdefaultWrapLength\fR( [$length] )" 4
.el .IP "\f(CW$obj\fR\->\fBdefaultWrapLength\fR( [$length] )" 4
.IX Item "$obj->defaultWrapLength( [$length] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBencode\fR(\s-1STRING,\s0 %options)" 4
.el .IP "\f(CW$obj\fR\->\fBencode\fR(\s-1STRING,\s0 \f(CW%options\fR)" 4
.IX Item "$obj->encode(STRING, %options)"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBfold\fR( $name, $body, [$maxchars] )" 4
.el .IP "\f(CW$obj\fR\->\fBfold\fR( \f(CW$name\fR, \f(CW$body\fR, [$maxchars] )" 4
.IX Item "$obj->fold( $name, $body, [$maxchars] )"
.PD 0
.ie n .IP "Mail::Message::Field::AuthResults\->\fBfold\fR( $name, $body, [$maxchars] )" 4
.el .IP "Mail::Message::Field::AuthResults\->\fBfold\fR( \f(CW$name\fR, \f(CW$body\fR, [$maxchars] )" 4
.IX Item "Mail::Message::Field::AuthResults->fold( $name, $body, [$maxchars] )"
.PD
Inherited, see \*(L"Internals\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBsetWrapLength\fR( [$length] )" 4
.el .IP "\f(CW$obj\fR\->\fBsetWrapLength\fR( [$length] )" 4
.IX Item "$obj->setWrapLength( [$length] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBstringifyData\fR(STRING|ARRAY|$objects)" 4
.el .IP "\f(CW$obj\fR\->\fBstringifyData\fR(STRING|ARRAY|$objects)" 4
.IX Item "$obj->stringifyData(STRING|ARRAY|$objects)"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Field
.ie n .IP "$obj\->\fBunfold\fR(\s-1STRING\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBunfold\fR(\s-1STRING\s0)" 4
.IX Item "$obj->unfold(STRING)"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Field
.SS "Parsing"
.IX Subsection "Parsing"
Extends \*(L"Parsing\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fBconsumeComment\fR(\s-1STRING\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBconsumeComment\fR(\s-1STRING\s0)" 4
.IX Item "$obj->consumeComment(STRING)"
.PD 0
.IP "Mail::Message::Field::AuthResults\->\fBconsumeComment\fR(\s-1STRING\s0)" 4
.IX Item "Mail::Message::Field::AuthResults->consumeComment(STRING)"
.PD
Inherited, see \*(L"Parsing\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBconsumeDotAtom\fR(\s-1STRING\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBconsumeDotAtom\fR(\s-1STRING\s0)" 4
.IX Item "$obj->consumeDotAtom(STRING)"
Inherited, see \*(L"Parsing\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBconsumePhrase\fR(\s-1STRING\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBconsumePhrase\fR(\s-1STRING\s0)" 4
.IX Item "$obj->consumePhrase(STRING)"
.PD 0
.IP "Mail::Message::Field::AuthResults\->\fBconsumePhrase\fR(\s-1STRING\s0)" 4
.IX Item "Mail::Message::Field::AuthResults->consumePhrase(STRING)"
.PD
Inherited, see \*(L"Parsing\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBdatum\fR( [$value] )" 4
.el .IP "\f(CW$obj\fR\->\fBdatum\fR( [$value] )" 4
.IX Item "$obj->datum( [$value] )"
Inherited, see \*(L"Parsing\*(R" in Mail::Message::Field::Structured
.ie n .IP "$obj\->\fBparse\fR(\s-1STRING\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBparse\fR(\s-1STRING\s0)" 4
.IX Item "$obj->parse(STRING)"
Inherited, see \*(L"Parsing\*(R" in Mail::Message::Field::Full
.ie n .IP "$obj\->\fBproduceBody\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBproduceBody\fR()" 4
.IX Item "$obj->produceBody()"
Inherited, see \*(L"Parsing\*(R" in Mail::Message::Field::Full
.SS "Error handling"
.IX Subsection "Error handling"
Extends \*(L"Error handling\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fB\s-1AUTOLOAD\s0\fR()" 4
.el .IP "\f(CW$obj\fR\->\fB\s-1AUTOLOAD\s0\fR()" 4
.IX Item "$obj->AUTOLOAD()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBaddReport\fR($object)" 4
.el .IP "\f(CW$obj\fR\->\fBaddReport\fR($object)" 4
.IX Item "$obj->addReport($object)"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "\f(CW$obj\fR\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "$obj->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD 0
.ie n .IP "Mail::Message::Field::AuthResults\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "Mail::Message::Field::AuthResults\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "Mail::Message::Field::AuthResults->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBerrors\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBerrors\fR()" 4
.IX Item "$obj->errors()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlog\fR( [$level, [$strings]] )" 4
.el .IP "\f(CW$obj\fR\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "$obj->log( [$level, [$strings]] )"
.PD 0
.IP "Mail::Message::Field::AuthResults\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "Mail::Message::Field::AuthResults->log( [$level, [$strings]] )"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlogPriority\fR($level)" 4
.el .IP "\f(CW$obj\fR\->\fBlogPriority\fR($level)" 4
.IX Item "$obj->logPriority($level)"
.PD 0
.IP "Mail::Message::Field::AuthResults\->\fBlogPriority\fR($level)" 4
.IX Item "Mail::Message::Field::AuthResults->logPriority($level)"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlogSettings\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlogSettings\fR()" 4
.IX Item "$obj->logSettings()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBnotImplemented\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBnotImplemented\fR()" 4
.IX Item "$obj->notImplemented()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBreport\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreport\fR( [$level] )" 4
.IX Item "$obj->report( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBreportAll\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreportAll\fR( [$level] )" 4
.IX Item "$obj->reportAll( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBtrace\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBtrace\fR( [$level] )" 4
.IX Item "$obj->trace( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBwarnings\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBwarnings\fR()" 4
.IX Item "$obj->warnings()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.SS "Cleanup"
.IX Subsection "Cleanup"
Extends \*(L"Cleanup\*(R" in Mail::Message::Field::Structured.
.ie n .IP "$obj\->\fB\s-1DESTROY\s0\fR()" 4
.el .IP "\f(CW$obj\fR\->\fB\s-1DESTROY\s0\fR()" 4
.IX Item "$obj->DESTROY()"
Inherited, see \*(L"Cleanup\*(R" in Mail::Reporter
.SH "DETAILS"
.IX Header "DETAILS"
Extends \*(L"\s-1DETAILS\*(R"\s0 in Mail::Message::Field::Structured.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .IP "Warning: Field content is not numerical: $content" 4
.el .IP "Warning: Field content is not numerical: \f(CW$content\fR" 4
.IX Item "Warning: Field content is not numerical: $content"
The numeric value of a field is requested (for instance the \f(CW\*(C`Lines\*(C'\fR or
\&\f(CW\*(C`Content\-Length\*(C'\fR fields should be numerical), however the data contains
weird characters.
.IP "Warning: Illegal character in charset '$charset'" 4
.IX Item "Warning: Illegal character in charset '$charset'"
The field is created with an utf8 string which only contains data from the
specified character set.  However, that character set can never be a valid
name because it contains characters which are not permitted.
.ie n .IP "Warning: Illegal character in field name $name" 4
.el .IP "Warning: Illegal character in field name \f(CW$name\fR" 4
.IX Item "Warning: Illegal character in field name $name"
A new field is being created which does contain characters not permitted
by the RFCs.  Using this field in messages may break other e\-mail clients
or transfer agents, and therefore mutulate or extinguish your message.
.IP "Warning: Illegal character in language '$lang'" 4
.IX Item "Warning: Illegal character in language '$lang'"
The field is created with data which is specified to be in a certain language,
however, the name of the language cannot be valid: it contains characters
which are not permitted by the RFCs.
.IP "Warning: Illegal encoding '$encoding', used 'q'" 4
.IX Item "Warning: Illegal encoding '$encoding', used 'q'"
The RFCs only permit base64 (\f(CW\*(C`b \*(C'\fR or \f(CW\*(C`B \*(C'\fR) or quoted-printable
(\f(CW\*(C`q\*(C'\fR or \f(CW\*(C`Q\*(C'\fR) encoding.  Other than these four options are illegal.
.IP "Error: No attributes for Authentication-Results" 4
.IX Item "Error: No attributes for Authentication-Results"
Is is not possible to add attributes to this field.
.ie n .IP "Error: Package $package does not implement $method." 4
.el .IP "Error: Package \f(CW$package\fR does not implement \f(CW$method\fR." 4
.IX Item "Error: Package $package does not implement $method."
Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Mail-Message distribution version 3.009,
built on February 07, 2020. Website: \fIhttp://perl.overmeer.net/CPAN/\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2001\-2020 by [Mark Overmeer <markov@cpan.org>]. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://dev.perl.org/licenses/\fR
