.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::Message::Construct::Text 3"
.TH Mail::Message::Construct::Text 3 "2020-02-07" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::Message::Construct::Text \- capture a Mail::Message as text
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& my $text = $msg\->string;
\& my $text = "$msg";   # via overload
\&
\& my @text = $msg\->lines;
\& my @text = @$lines;  # via overload
\&
\& my $fh   = $msg\->file;
\& my $line = <$fh>;
\&
\& $msg\->printStructure;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Complex functionality on Mail::Message objects is implemented in
different files which are autoloaded.  This file implements the
functionality related to creating message replies.
.SH "METHODS"
.IX Header "METHODS"
.SS "The whole message as text"
.IX Subsection "The whole message as text"
.ie n .IP "$obj\->\fBfile\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBfile\fR()" 4
.IX Item "$obj->file()"
Returns the message as file-handle.
.ie n .IP "$obj\->\fBlines\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlines\fR()" 4
.IX Item "$obj->lines()"
Returns the whole message as set of lines.  In \s-1LIST\s0 context, copies of the
lines are returned.  In \s-1SCALAR\s0 context, a reference to an array of lines
is returned.
.ie n .IP "$obj\->\fBprintStructure\fR( [$fh|undef],[$indent] )" 4
.el .IP "\f(CW$obj\fR\->\fBprintStructure\fR( [$fh|undef],[$indent] )" 4
.IX Item "$obj->printStructure( [$fh|undef],[$indent] )"
Print the structure of a message to the specified \f(CW$fh\fR or the
selected filehandle.  When explicitly \f(CW\*(C`undef\*(C'\fR is specified as handle,
then the output will be returned as string.
.Sp
The message's subject and the types of all composing parts are
displayed.
.Sp
\&\f(CW$indent\fR specifies the initial indentation string: it is added in front
of each line. The \f(CW$indent\fR must contain at least one white-space.
.Sp
example:
.Sp
.Vb 2
\& my $msg = ...;
\& $msg\->printStructure(\e*OUTPUT);
\&
\& $msg\->printStructure;
\&
\& my $struct = $msg\->printStructure(undef);
\&
\& # Possible output for one message:
\& multipart/mixed: forwarded message from Pietje Puk (1550 bytes)
\&    text/plain (164 bytes)
\&    message/rfc822 (1043 bytes)
\&       multipart/alternative: A multipart alternative (942 bytes)
\&          text/plain (148 bytes, deleted)
\&          text/html (358 bytes)
.Ve
.ie n .IP "$obj\->\fBstring\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBstring\fR()" 4
.IX Item "$obj->string()"
Returns the whole message as string.
.SS "Flags"
.IX Subsection "Flags"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Mail-Message distribution version 3.009,
built on February 07, 2020. Website: \fIhttp://perl.overmeer.net/CPAN/\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2001\-2020 by [Mark Overmeer <markov@cpan.org>]. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://dev.perl.org/licenses/\fR
