.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::Message::Body::String 3"
.TH Mail::Message::Body::String 3 "2020-02-07" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::Message::Body::String \- body of a Mail::Message stored as single string
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 3
\& Mail::Message::Body::String
\&   is a Mail::Message::Body
\&   is a Mail::Reporter
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& See Mail::Message::Body
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The body (content) of a message can be stored in various ways.  In this
documentation you will find the description of extra functionality you have
when a message is stored as a single scalar.
.PP
Storing a whole message in one string is only a smart choice when the content
is small or encoded. Even when stored as a scalar, you can still treat the
body as if the data is stored in lines or an external file, but this will be
slower.
.PP
Extends \*(L"\s-1DESCRIPTION\*(R"\s0 in Mail::Message::Body.
.SH "OVERLOADED"
.IX Header "OVERLOADED"
Extends \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Body.
.ie n .IP "overload: \fB""""\fR" 4
.el .IP "overload: \fB``''\fR" 4
.IX Item "overload: """""
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Body
.IP "overload: \fB'==' and '!='\fR" 4
.IX Item "overload: '==' and '!='"
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Body
.IP "overload: \fB@{}\fR" 4
.IX Item "overload: @{}"
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Body
.IP "overload: \fBbool\fR" 4
.IX Item "overload: bool"
Inherited, see \*(L"\s-1OVERLOADED\*(R"\s0 in Mail::Message::Body
.SH "METHODS"
.IX Header "METHODS"
Extends \*(L"\s-1METHODS\*(R"\s0 in Mail::Message::Body.
.SS "Constructors"
.IX Subsection "Constructors"
Extends \*(L"Constructors\*(R" in Mail::Message::Body.
.ie n .IP "$obj\->\fBclone\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBclone\fR()" 4
.IX Item "$obj->clone()"
Inherited, see \*(L"Constructors\*(R" in Mail::Message::Body
.IP "Mail::Message::Body::String\->\fBnew\fR(%options)" 4
.IX Item "Mail::Message::Body::String->new(%options)"
.Vb 10
\& \-Option           \-\-Defined in         \-\-Default
\&  based_on           Mail::Message::Body  undef
\&  charset            Mail::Message::Body  \*(AqPERL\*(Aq or <undef>
\&  checked            Mail::Message::Body  <false>
\&  content_id         Mail::Message::Body  undef
\&  data               Mail::Message::Body  undef
\&  description        Mail::Message::Body  undef
\&  disposition        Mail::Message::Body  undef
\&  eol                Mail::Message::Body  \*(AqNATIVE\*(Aq
\&  file               Mail::Message::Body  undef
\&  filename           Mail::Message::Body  undef
\&  log                Mail::Reporter       \*(AqWARNINGS\*(Aq
\&  message            Mail::Message::Body  undef
\&  mime_type          Mail::Message::Body  \*(Aqtext/plain\*(Aq
\&  modified           Mail::Message::Body  <false>
\&  trace              Mail::Reporter       \*(AqWARNINGS\*(Aq
\&  transfer_encoding  Mail::Message::Body  \*(Aqnone\*(Aq
.Ve
.RS 4
.IP "based_on => \s-1BODY\s0" 2
.IX Item "based_on => BODY"
.PD 0
.IP "charset => CHARSET|'\s-1PERL\s0'" 2
.IX Item "charset => CHARSET|'PERL'"
.IP "checked => \s-1BOOLEAN\s0" 2
.IX Item "checked => BOOLEAN"
.IP "content_id => \s-1STRING\s0" 2
.IX Item "content_id => STRING"
.IP "data => ARRAY-OF-LINES | \s-1STRING\s0" 2
.IX Item "data => ARRAY-OF-LINES | STRING"
.IP "description => STRING|FIELD" 2
.IX Item "description => STRING|FIELD"
.IP "disposition => STRING|FIELD" 2
.IX Item "disposition => STRING|FIELD"
.IP "eol => '\s-1CR\s0'|'\s-1LF\s0'|'\s-1CRLF\s0'|'\s-1NATIVE\s0'" 2
.IX Item "eol => 'CR'|'LF'|'CRLF'|'NATIVE'"
.IP "file => FILENAME|FILEHANDLE|IOHANDLE" 2
.IX Item "file => FILENAME|FILEHANDLE|IOHANDLE"
.IP "filename => \s-1FILENAME\s0" 2
.IX Item "filename => FILENAME"
.IP "log => \s-1LEVEL\s0" 2
.IX Item "log => LEVEL"
.IP "message => \s-1MESSAGE\s0" 2
.IX Item "message => MESSAGE"
.IP "mime_type => STRING|FIELD|MIME" 2
.IX Item "mime_type => STRING|FIELD|MIME"
.IP "modified => \s-1BOOLEAN\s0" 2
.IX Item "modified => BOOLEAN"
.IP "trace => \s-1LEVEL\s0" 2
.IX Item "trace => LEVEL"
.IP "transfer_encoding => STRING|FIELD" 2
.IX Item "transfer_encoding => STRING|FIELD"
.RE
.RS 4
.RE
.PD
.SS "Constructing a body"
.IX Subsection "Constructing a body"
Extends \*(L"Constructing a body\*(R" in Mail::Message::Body.
.ie n .IP "$obj\->\fBattach\fR($messages, %options)" 4
.el .IP "\f(CW$obj\fR\->\fBattach\fR($messages, \f(CW%options\fR)" 4
.IX Item "$obj->attach($messages, %options)"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body::Construct
.ie n .IP "$obj\->\fBcheck\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBcheck\fR()" 4
.IX Item "$obj->check()"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body::Encode
.ie n .IP "$obj\->\fBconcatenate\fR($components)" 4
.el .IP "\f(CW$obj\fR\->\fBconcatenate\fR($components)" 4
.IX Item "$obj->concatenate($components)"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body::Construct
.ie n .IP "$obj\->\fBdecoded\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBdecoded\fR(%options)" 4
.IX Item "$obj->decoded(%options)"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBencode\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBencode\fR(%options)" 4
.IX Item "$obj->encode(%options)"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body::Encode
.ie n .IP "$obj\->\fBencoded\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBencoded\fR()" 4
.IX Item "$obj->encoded()"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body::Encode
.ie n .IP "$obj\->\fBeol\fR( ['\s-1CR\s0'|'\s-1LF\s0'|'\s-1CRLF\s0'|'\s-1NATIVE\s0'] )" 4
.el .IP "\f(CW$obj\fR\->\fBeol\fR( ['\s-1CR\s0'|'\s-1LF\s0'|'\s-1CRLF\s0'|'\s-1NATIVE\s0'] )" 4
.IX Item "$obj->eol( ['CR'|'LF'|'CRLF'|'NATIVE'] )"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBforeachLine\fR(\s-1CODE\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBforeachLine\fR(\s-1CODE\s0)" 4
.IX Item "$obj->foreachLine(CODE)"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body::Construct
.ie n .IP "$obj\->\fBstripSignature\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBstripSignature\fR(%options)" 4
.IX Item "$obj->stripSignature(%options)"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body::Construct
.ie n .IP "$obj\->\fBunify\fR($body)" 4
.el .IP "\f(CW$obj\fR\->\fBunify\fR($body)" 4
.IX Item "$obj->unify($body)"
Inherited, see \*(L"Constructing a body\*(R" in Mail::Message::Body::Encode
.SS "The body"
.IX Subsection "The body"
Extends \*(L"The body\*(R" in Mail::Message::Body.
.ie n .IP "$obj\->\fBisDelayed\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisDelayed\fR()" 4
.IX Item "$obj->isDelayed()"
Inherited, see \*(L"The body\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBisMultipart\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisMultipart\fR()" 4
.IX Item "$obj->isMultipart()"
Inherited, see \*(L"The body\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBisNested\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisNested\fR()" 4
.IX Item "$obj->isNested()"
Inherited, see \*(L"The body\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBmessage\fR( [$message] )" 4
.el .IP "\f(CW$obj\fR\->\fBmessage\fR( [$message] )" 4
.IX Item "$obj->message( [$message] )"
Inherited, see \*(L"The body\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBpartNumberOf\fR($part)" 4
.el .IP "\f(CW$obj\fR\->\fBpartNumberOf\fR($part)" 4
.IX Item "$obj->partNumberOf($part)"
Inherited, see \*(L"The body\*(R" in Mail::Message::Body
.SS "About the payload"
.IX Subsection "About the payload"
Extends \*(L"About the payload\*(R" in Mail::Message::Body.
.ie n .IP "$obj\->\fBcharset\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBcharset\fR()" 4
.IX Item "$obj->charset()"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBchecked\fR( [\s-1BOOLEAN\s0] )" 4
.el .IP "\f(CW$obj\fR\->\fBchecked\fR( [\s-1BOOLEAN\s0] )" 4
.IX Item "$obj->checked( [BOOLEAN] )"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBcontentId\fR( [STRING|$field] )" 4
.el .IP "\f(CW$obj\fR\->\fBcontentId\fR( [STRING|$field] )" 4
.IX Item "$obj->contentId( [STRING|$field] )"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBdescription\fR( [STRING|$field] )" 4
.el .IP "\f(CW$obj\fR\->\fBdescription\fR( [STRING|$field] )" 4
.IX Item "$obj->description( [STRING|$field] )"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBdisposition\fR( [STRING|$field] )" 4
.el .IP "\f(CW$obj\fR\->\fBdisposition\fR( [STRING|$field] )" 4
.IX Item "$obj->disposition( [STRING|$field] )"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBdispositionFilename\fR( [$directory] )" 4
.el .IP "\f(CW$obj\fR\->\fBdispositionFilename\fR( [$directory] )" 4
.IX Item "$obj->dispositionFilename( [$directory] )"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body::Encode
.ie n .IP "$obj\->\fBisBinary\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisBinary\fR()" 4
.IX Item "$obj->isBinary()"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body::Encode
.ie n .IP "$obj\->\fBisText\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisText\fR()" 4
.IX Item "$obj->isText()"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body::Encode
.ie n .IP "$obj\->\fBmimeType\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBmimeType\fR()" 4
.IX Item "$obj->mimeType()"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBnrLines\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBnrLines\fR()" 4
.IX Item "$obj->nrLines()"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBsize\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBsize\fR()" 4
.IX Item "$obj->size()"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBtransferEncoding\fR( [STRING|$field] )" 4
.el .IP "\f(CW$obj\fR\->\fBtransferEncoding\fR( [STRING|$field] )" 4
.IX Item "$obj->transferEncoding( [STRING|$field] )"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBtype\fR( [STRING|$field] )" 4
.el .IP "\f(CW$obj\fR\->\fBtype\fR( [STRING|$field] )" 4
.IX Item "$obj->type( [STRING|$field] )"
Inherited, see \*(L"About the payload\*(R" in Mail::Message::Body
.SS "Access to the payload"
.IX Subsection "Access to the payload"
Extends \*(L"Access to the payload\*(R" in Mail::Message::Body.
.ie n .IP "$obj\->\fBendsOnNewline\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBendsOnNewline\fR()" 4
.IX Item "$obj->endsOnNewline()"
Inherited, see \*(L"Access to the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBfile\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBfile\fR()" 4
.IX Item "$obj->file()"
Inherited, see \*(L"Access to the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBlines\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlines\fR()" 4
.IX Item "$obj->lines()"
Inherited, see \*(L"Access to the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBprint\fR( [$fh] )" 4
.el .IP "\f(CW$obj\fR\->\fBprint\fR( [$fh] )" 4
.IX Item "$obj->print( [$fh] )"
Inherited, see \*(L"Access to the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBprintEscapedFrom\fR($fh)" 4
.el .IP "\f(CW$obj\fR\->\fBprintEscapedFrom\fR($fh)" 4
.IX Item "$obj->printEscapedFrom($fh)"
Inherited, see \*(L"Access to the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBstring\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBstring\fR()" 4
.IX Item "$obj->string()"
Inherited, see \*(L"Access to the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBstripTrailingNewline\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBstripTrailingNewline\fR()" 4
.IX Item "$obj->stripTrailingNewline()"
Inherited, see \*(L"Access to the payload\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBwrite\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBwrite\fR(%options)" 4
.IX Item "$obj->write(%options)"
Inherited, see \*(L"Access to the payload\*(R" in Mail::Message::Body
.SS "Internals"
.IX Subsection "Internals"
Extends \*(L"Internals\*(R" in Mail::Message::Body.
.ie n .IP "$obj\->\fBaddTransferEncHandler\fR( $name, <$class|$object> )" 4
.el .IP "\f(CW$obj\fR\->\fBaddTransferEncHandler\fR( \f(CW$name\fR, <$class|$object> )" 4
.IX Item "$obj->addTransferEncHandler( $name, <$class|$object> )"
.PD 0
.ie n .IP "Mail::Message::Body::String\->\fBaddTransferEncHandler\fR( $name, <$class|$object> )" 4
.el .IP "Mail::Message::Body::String\->\fBaddTransferEncHandler\fR( \f(CW$name\fR, <$class|$object> )" 4
.IX Item "Mail::Message::Body::String->addTransferEncHandler( $name, <$class|$object> )"
.PD
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body::Encode
.ie n .IP "$obj\->\fBcontentInfoFrom\fR($head)" 4
.el .IP "\f(CW$obj\fR\->\fBcontentInfoFrom\fR($head)" 4
.IX Item "$obj->contentInfoFrom($head)"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBcontentInfoTo\fR($head)" 4
.el .IP "\f(CW$obj\fR\->\fBcontentInfoTo\fR($head)" 4
.IX Item "$obj->contentInfoTo($head)"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBfileLocation\fR( [$begin, $end] )" 4
.el .IP "\f(CW$obj\fR\->\fBfileLocation\fR( [$begin, \f(CW$end\fR] )" 4
.IX Item "$obj->fileLocation( [$begin, $end] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBgetTransferEncHandler\fR($type)" 4
.el .IP "\f(CW$obj\fR\->\fBgetTransferEncHandler\fR($type)" 4
.IX Item "$obj->getTransferEncHandler($type)"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body::Encode
.ie n .IP "$obj\->\fBisModified\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBisModified\fR()" 4
.IX Item "$obj->isModified()"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBload\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBload\fR()" 4
.IX Item "$obj->load()"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBmodified\fR( [\s-1BOOLEAN\s0] )" 4
.el .IP "\f(CW$obj\fR\->\fBmodified\fR( [\s-1BOOLEAN\s0] )" 4
.IX Item "$obj->modified( [BOOLEAN] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBmoveLocation\fR( [$distance] )" 4
.el .IP "\f(CW$obj\fR\->\fBmoveLocation\fR( [$distance] )" 4
.IX Item "$obj->moveLocation( [$distance] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBread\fR( $parser, $head, $bodytype, [$chars, [$lines]] )" 4
.el .IP "\f(CW$obj\fR\->\fBread\fR( \f(CW$parser\fR, \f(CW$head\fR, \f(CW$bodytype\fR, [$chars, [$lines]] )" 4
.IX Item "$obj->read( $parser, $head, $bodytype, [$chars, [$lines]] )"
Inherited, see \*(L"Internals\*(R" in Mail::Message::Body
.SS "Error handling"
.IX Subsection "Error handling"
Extends \*(L"Error handling\*(R" in Mail::Message::Body.
.ie n .IP "$obj\->\fB\s-1AUTOLOAD\s0\fR()" 4
.el .IP "\f(CW$obj\fR\->\fB\s-1AUTOLOAD\s0\fR()" 4
.IX Item "$obj->AUTOLOAD()"
Inherited, see \*(L"Error handling\*(R" in Mail::Message::Body
.ie n .IP "$obj\->\fBaddReport\fR($object)" 4
.el .IP "\f(CW$obj\fR\->\fBaddReport\fR($object)" 4
.IX Item "$obj->addReport($object)"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "\f(CW$obj\fR\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "$obj->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD 0
.ie n .IP "Mail::Message::Body::String\->\fBdefaultTrace\fR( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )" 4
.el .IP "Mail::Message::Body::String\->\fBdefaultTrace\fR( [$level]|[$loglevel, \f(CW$tracelevel\fR]|[$level, \f(CW$callback\fR] )" 4
.IX Item "Mail::Message::Body::String->defaultTrace( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBerrors\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBerrors\fR()" 4
.IX Item "$obj->errors()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlog\fR( [$level, [$strings]] )" 4
.el .IP "\f(CW$obj\fR\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "$obj->log( [$level, [$strings]] )"
.PD 0
.IP "Mail::Message::Body::String\->\fBlog\fR( [$level, [$strings]] )" 4
.IX Item "Mail::Message::Body::String->log( [$level, [$strings]] )"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlogPriority\fR($level)" 4
.el .IP "\f(CW$obj\fR\->\fBlogPriority\fR($level)" 4
.IX Item "$obj->logPriority($level)"
.PD 0
.IP "Mail::Message::Body::String\->\fBlogPriority\fR($level)" 4
.IX Item "Mail::Message::Body::String->logPriority($level)"
.PD
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBlogSettings\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBlogSettings\fR()" 4
.IX Item "$obj->logSettings()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBnotImplemented\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBnotImplemented\fR()" 4
.IX Item "$obj->notImplemented()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBreport\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreport\fR( [$level] )" 4
.IX Item "$obj->report( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBreportAll\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBreportAll\fR( [$level] )" 4
.IX Item "$obj->reportAll( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBtrace\fR( [$level] )" 4
.el .IP "\f(CW$obj\fR\->\fBtrace\fR( [$level] )" 4
.IX Item "$obj->trace( [$level] )"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.ie n .IP "$obj\->\fBwarnings\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBwarnings\fR()" 4
.IX Item "$obj->warnings()"
Inherited, see \*(L"Error handling\*(R" in Mail::Reporter
.SS "Cleanup"
.IX Subsection "Cleanup"
Extends \*(L"Cleanup\*(R" in Mail::Message::Body.
.ie n .IP "$obj\->\fB\s-1DESTROY\s0\fR()" 4
.el .IP "\f(CW$obj\fR\->\fB\s-1DESTROY\s0\fR()" 4
.IX Item "$obj->DESTROY()"
Inherited, see \*(L"Cleanup\*(R" in Mail::Reporter
.SH "DETAILS"
.IX Header "DETAILS"
Extends \*(L"\s-1DETAILS\*(R"\s0 in Mail::Message::Body.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .IP "Warning: Charset $name is not known" 4
.el .IP "Warning: Charset \f(CW$name\fR is not known" 4
.IX Item "Warning: Charset $name is not known"
The encoding or decoding of a message body encounters a character set which
is not understood by Perl's Encode module.
.ie n .IP "Warning: No decoder defined for transfer encoding $name." 4
.el .IP "Warning: No decoder defined for transfer encoding \f(CW$name\fR." 4
.IX Item "Warning: No decoder defined for transfer encoding $name."
The data (message body) is encoded in a way which is not currently understood,
therefore no decoding (or recoding) can take place.
.ie n .IP "Warning: No encoder defined for transfer encoding $name." 4
.el .IP "Warning: No encoder defined for transfer encoding \f(CW$name\fR." 4
.IX Item "Warning: No encoder defined for transfer encoding $name."
The data (message body) has been decoded, but the required encoding is
unknown.  The decoded data is returned.
.ie n .IP "Error: Package $package does not implement $method." 4
.el .IP "Error: Package \f(CW$package\fR does not implement \f(CW$method\fR." 4
.IX Item "Error: Package $package does not implement $method."
Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.
.ie n .IP "Error: Unable to read file $filename for message body scalar: $!" 4
.el .IP "Error: Unable to read file \f(CW$filename\fR for message body scalar: $!" 4
.IX Item "Error: Unable to read file $filename for message body scalar: $!"
A Mail::Message::Body::String object is to be created from a named
file, but it is impossible to read that file to retrieve the lines within.
.ie n .IP "Warning: Unknown line terminator $eol ignored" 4
.el .IP "Warning: Unknown line terminator \f(CW$eol\fR ignored" 4
.IX Item "Warning: Unknown line terminator $eol ignored"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Mail-Message distribution version 3.009,
built on February 07, 2020. Website: \fIhttp://perl.overmeer.net/CPAN/\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2001\-2020 by [Mark Overmeer <markov@cpan.org>]. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://dev.perl.org/licenses/\fR
