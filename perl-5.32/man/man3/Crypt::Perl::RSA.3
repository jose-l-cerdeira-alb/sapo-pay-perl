.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Crypt::Perl::RSA 3"
.TH Crypt::Perl::RSA 3 "2016-12-29" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Crypt::Perl::RSA \- RSA in pure Perl (really!)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    my $prkey1 = Crypt::Perl::RSA::Parse::private($pem_or_der);
\&    my $pbkey1 = Crypt::Perl::RSA::Parse::public($pem_or_der);
\&
\&    #\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&
\&    my $prkey = Crypt::Perl::RSA::Generate::generate(2048);
\&
\&    my $der = $prkey\->to_der();
\&    my $der2 = $prkey\->to_pem();
\&
\&    #\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&
\&    my $msg = \*(AqMy message\*(Aq;
\&
\&    my $sig = $prkey\->sign_RS256($msg);
\&
\&    die \*(AqWut\*(Aq if !$prkey\->verify_RS256($msg, $sig);
\&
\&    die \*(AqWut\*(Aq if !$pbkey\->verify_RS256($msg, $sig);
.Ve
.SH "DISCUSSION"
.IX Header "DISCUSSION"
See the documentation for Crypt::Perl::RSA::PublicKey and
Crypt::Perl::RSA::PrivateKey for more on what these interfaces
can do.
.PP
\&\s-1NOTE:\s0 The \s-1RSA\s0 logic here is ported from Kenji Urushima’s
jsrsasign <http://kjur.github.io/jsrsasign/>.
.SH "SECURITY"
.IX Header "SECURITY"
\&\s-1RSA\s0 is safe as long as factorization is “hard”. As computers get faster, \s-1RSA\s0
keys have needed to get bigger and bigger to maintain the “difficulty” of
factoring the key’s modulus. \s-1RSA\s0 will eventually no longer be viable toward
this end: as \s-1RSA\s0 keys get bigger, the
security advantage of increasing their size diminishes.
.SH "SPEED"
.IX Header "SPEED"
Key generation is probably generally useful only with an XS-based backend to
Math::BigInt. Once Math::Prime::Util is installable without a compiler
I’ll replace Math::ProvablePrime here with Math::Prime::Util, which should
speed things up significantly.
.SH "TODO"
.IX Header "TODO"
This minimal set of functionality can be augmented as feature requests come in.
Ideas:
.IP "\(bu" 4
Support signature schemes besides \s-1PKCS\s0 #1 v1.5.
.IP "\(bu" 4
Use faster prime-number-finder logic if it’s available.
