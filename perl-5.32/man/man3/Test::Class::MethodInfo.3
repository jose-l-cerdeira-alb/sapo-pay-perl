.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test::Class::MethodInfo 3"
.TH Test::Class::MethodInfo 3 "2021-02-17" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::Class::MethodInfo \- the info associated with a test method
.SH "VERSION"
.IX Header "VERSION"
version 0.51
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Secret internal class
\&  # not for public use
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Holds info related to particular test methods. Not part of the public \s-1API\s0 and likely to change or completely disappear. If you need to rely on any of this code let me know and we'll see if we can work something out.
.SH "METHODS"
.IX Header "METHODS"
.IP "\fBnew\fR" 4
.IX Item "new"
.PD 0
.IP "\fBis_method_type\fR" 4
.IX Item "is_method_type"
.IP "\fBis_num_tests\fR" 4
.IX Item "is_num_tests"
.IP "\fBis_type\fR" 4
.IX Item "is_type"
.IP "\fBname\fR" 4
.IX Item "name"
.IP "\fBtype\fR" 4
.IX Item "type"
.IP "\fBnum_tests\fR" 4
.IX Item "num_tests"
.PD
.SH "AUTHOR"
.IX Header "AUTHOR"
Adrian Howard <adrianh@quietstars.com>
.PP
If you can spare the time, please drop me a line if you find this module useful.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "Test::Class" 4
.IX Item "Test::Class"
What you should be looking at rather than this internal stuff
.SH "LICENCE"
.IX Header "LICENCE"
Copyright 2006 Adrian Howard, All Rights Reserved.
.PP
This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.
