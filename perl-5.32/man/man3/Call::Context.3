.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Call::Context 3"
.TH Call::Context 3 "2018-10-27" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Call::Context \- Sanity\-check calling context
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Call::Context;
\&
\&    sub gives_a_list {
\&
\&        #Will die() if the context is not list.
\&        Call::Context::must_be_list();
\&
\&        return (1, 2, 3);
\&    }
\&
\&    gives_a_list();             # die()s: incorrect context (void)
\&
\&    my $v = gives_a_list();     # die()s: incorrect context (scalar)
\&
\&    my @list = gives_a_list();  # lives
\&
\&    #\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&
\&    sub scalar_is_bad {
\&
\&        #Will die() if the context is not list.
\&        Call::Context::must_not_be_scalar();
\&
\&        return (1, 2, 3);
\&    }
\&
\&    scalar_is_bad();            # lives
\&
\&    my $v = scalar_is_bad();    # die()s: incorrect context (scalar)
\&
\&    my @list = scalar_is_bad(); # lives
.Ve
.SH "DISCUSSION"
.IX Header "DISCUSSION"
If your function only expects to return a list, then a call in some other
context is, by definition, an error. The problem is that, depending on how
the function is written, it may actually do something expected in testing, but
then in production act differently.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "\fBmust_be_list()\fP"
.IX Subsection "must_be_list()"
\&\f(CW\*(C`die()\*(C'\fRs if the calling function is itself called outside list context.
(See the \s-1SYNOPSIS\s0 for examples.)
.SS "\fBmust_not_be_scalar()\fP"
.IX Subsection "must_not_be_scalar()"
\&\f(CW\*(C`die()\*(C'\fRs if the calling function is itself called in scalar context.
(See the \s-1SYNOPSIS\s0 for examples.)
.SH "EXCEPTIONS"
.IX Header "EXCEPTIONS"
This module throws instances of \f(CW\*(C`Call::Context::X\*(C'\fR. \f(CW\*(C`Call::Context::X\*(C'\fR is
overloaded to stringify; however, to keep memory usage low, \f(CW\*(C`overload\*(C'\fR is not
loaded until instantiation.
.SH "REPOSITORY"
.IX Header "REPOSITORY"
https://github.com/FGasper/p5\-Call\-Context
