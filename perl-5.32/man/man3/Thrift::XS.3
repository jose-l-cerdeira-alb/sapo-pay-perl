.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Thrift::XS 3"
.TH Thrift::XS 3 "2011-07-11" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Thrift::XS \- Faster Thrift binary protocol encoding and decoding
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    use Thrift;
\&    use Thrift::Socket;
\&    use Thrift::FramedTransport;
\&    use Thrift::XS::BinaryProtocol;
\&    use MyThriftInterface;
\&    
\&    my $socket    = Thrift::Socket\->new( $host, $port );
\&    my $transport = Thrift::FramedTransport\->new($socket);
\&    my $protocol  = Thrift::XS::BinaryProtocol\->new($transport);
\&    my $client    = MyThriftInterface\->new($protocol);
\&    
\&    $transport\->open;
\&    
\&    $client\->api_call( @args );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Thrift::XS provides faster versions of Thrift::BinaryProtocol and
Thrift::MemoryBuffer.
.PP
Thrift compact protocol support is also available, just replace
Thrift::XS::BinaryProtocol with Thrift::XS::CompactProtocol.
.PP
To use, simply replace your Thrift initialization code with the appropriate
Thrift::XS version.
.SH "SPEED"
.IX Header "SPEED"
For the best performance, you need to use a custom socket layer and both
Thrift::XS::MemoryBuffer and one of Thrift::XS::BinaryProtocol or
Thrift::XS::CompactProtocol. If using the standard BufferedTransport,
FramedTransport, or HttpClient modules, performance will not be as good
as it could be. In particular, HttpClient is incredibly bad, making a lot of
very small (1\-4 byte) \fBsysread()\fR and \fBprint()\fR calls. A future version of this
module will probably provide \s-1XS\s0 implementations of these other modules to
help with this problem.
.PP
Here is a breakdown of the performance improvements of the various low-level
methods. A given Thrift \s-1API\s0 call will make many write and read method calls,
so your results will be some average of these numbers. For detailed numbers
and to run your own benchmarks, see the bench/bench.pl script.
.PP
.Vb 1
\&    XS::MemoryBuffer write + read: 6x faster
\&    
\&    XS::BinaryProtocol
\&        writeMessageBegin + readMessageBegin: 12.0x
\&        complex struct/field write+read:       6.6x
\&        writeMapBegin + readMapBegin:         24.0x
\&        writeListBegin + readListBegin:       20.0x
\&        writeSetBegin + readSetBegin:         21.0x
\&        writeBool + readBool:                 13.5x
\&        writeByte + readByte:                 13.9x
\&        writeI16 + readI16:                   14.4x
\&        writeI32 + readI32:                   12.9x
\&        writeI64 + readI64:                   29.4x
\&        writeDouble + readDouble:             13.5x
\&        writeString + readString:              7.5x
\&        
\&    XS::CompactProtocol
\&        writeMessageBegin + readMessageBegin: 11.6x
\&        complex struct/field write+read:       6.2x
\&        writeMapBegin + readMapBegin:         18.7x
\&        writeListBegin + readListBegin:       14.1x
\&        writeSetBegin + readSetBegin:         13.3x
\&        writeBool + readBool:                 13.2x
\&        writeByte + readByte:                 13.9x
\&        writeI16 + readI16:                    9.0x
\&        writeI32 + readI32:                    7.5x
\&        writeI64 + readI64:                   10.0x
\&        writeDouble + readDouble:             13.5x
\&        writeString + readString:              7.4x
.Ve
.SH "THANKS"
.IX Header "THANKS"
Wang Lam, <wlam@kosmix.com>, for patches and additional tests.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Thrift Home <http://thrift.apache.org/>
.PP
Thrift Perl code <http://svn.apache.org/repos/asf/thrift/trunk/lib/perl/>
.PP
AnyEvent::Cassandra, example usage of this module. This module is not yet
on \s-1CPAN,\s0 but will be available soon.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andy Grundman, <andy@hybridized.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2011 Andy Grundman
.PP
Licensed under the Apache License, Version 2.0 (the \*(L"License\*(R");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
.PP
.Vb 1
\&    http://www.apache.org/licenses/LICENSE\-2.0
.Ve
.PP
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \*(L"\s-1AS IS\*(R" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\s0 either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
